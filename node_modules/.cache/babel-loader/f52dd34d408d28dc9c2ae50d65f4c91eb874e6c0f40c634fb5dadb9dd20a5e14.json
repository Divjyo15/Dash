{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hall_\\\\Desktop\\\\Bid\\\\frontend\\\\src\\\\components\\\\DashboardApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { useData } from '../services/DataContext';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend, RadialLinearScale } from 'chart.js';\nimport { Line, Bar, Pie, Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, RadialLinearScale, Title, Tooltip, Legend);\nconst DashboardApp = () => {\n  _s();\n  const {\n    data\n  } = useData();\n  const [filters, setFilters] = useState({\n    endYear: 'all',\n    topic: 'all',\n    sector: 'all',\n    region: 'all',\n    pest: 'all',\n    source: 'all',\n    swot: 'all',\n    country: 'all',\n    city: 'all'\n  });\n  const [resetFilters, setResetFilters] = useState(false);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    }\n  };\n  const processedData = useMemo(() => {\n    return data.filter(item => {\n      return (filters.endYear === 'all' || item.end_year === parseInt(filters.endYear)) && (filters.topic === 'all' || item.topic === filters.topic) && (filters.sector === 'all' || item.sector === filters.sector) && (filters.region === 'all' || item.region === filters.region) && (filters.pest === 'all' || item.pestle === filters.pest) && (filters.source === 'all' || item.source === filters.source) && (filters.swot === 'all' || item.swot === filters.swot) && (filters.country === 'all' || item.country === filters.country) && (filters.city === 'all' || item.city === filters.city);\n    });\n  }, [data, filters]);\n  const chartData = useMemo(() => {\n    const regionCount = {};\n    const topicCount = {};\n    const yearlyMetrics = {};\n    const sectorData = {};\n    const countryData = {};\n    const cityData = {};\n    const swotData = {};\n    processedData.forEach(item => {\n      if (item.region) {\n        regionCount[item.region] = (regionCount[item.region] || 0) + 1;\n      }\n      if (item.topic) {\n        topicCount[item.topic] = (topicCount[item.topic] || 0) + 1;\n      }\n      if (item.country) {\n        countryData[item.country] = (countryData[item.country] || 0) + 1;\n      }\n      if (item.city && item.city !== \"\") {\n        cityData[item.city] = (cityData[item.city] || 0) + 1;\n      }\n      if (item.sector) {\n        sectorData[item.sector] = (sectorData[item.sector] || 0) + 1;\n      }\n      if (item.swot && item.swot !== \"\") {\n        swotData[item.swot] = (swotData[item.swot] || 0) + 1;\n      }\n      if (item.end_year) {\n        if (!yearlyMetrics[item.end_year]) {\n          yearlyMetrics[item.end_year] = {\n            intensity: {\n              sum: 0,\n              count: 0\n            },\n            likelihood: {\n              sum: 0,\n              count: 0\n            },\n            relevance: {\n              sum: 0,\n              count: 0\n            }\n          };\n        }\n        if (item.intensity) {\n          yearlyMetrics[item.end_year].intensity.sum += item.intensity;\n          yearlyMetrics[item.end_year].intensity.count += 1;\n        }\n        if (item.likelihood) {\n          yearlyMetrics[item.end_year].likelihood.sum += item.likelihood;\n          yearlyMetrics[item.end_year].likelihood.count += 1;\n        }\n        if (item.relevance) {\n          yearlyMetrics[item.end_year].relevance.sum += item.relevance;\n          yearlyMetrics[item.end_year].relevance.count += 1;\n        }\n      }\n    });\n    const years = Object.keys(yearlyMetrics).sort();\n    const yearlyData = {\n      intensity: years.map(year => yearlyMetrics[year].intensity.count > 0 ? yearlyMetrics[year].intensity.sum / yearlyMetrics[year].intensity.count : 0),\n      likelihood: years.map(year => yearlyMetrics[year].likelihood.count > 0 ? yearlyMetrics[year].likelihood.sum / yearlyMetrics[year].likelihood.count : 0),\n      relevance: years.map(year => yearlyMetrics[year].relevance.count > 0 ? yearlyMetrics[year].relevance.sum / yearlyMetrics[year].relevance.count : 0)\n    };\n    return {\n      metricsOverTime: {\n        labels: years,\n        datasets: [{\n          label: 'Intensity',\n          data: yearlyData.intensity,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }, {\n          label: 'Likelihood',\n          data: yearlyData.likelihood,\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.1\n        }, {\n          label: 'Relevance',\n          data: yearlyData.relevance,\n          borderColor: 'rgb(153, 102, 255)',\n          tension: 0.1\n        }]\n      },\n      regionChart: {\n        labels: Object.keys(regionCount),\n        datasets: [{\n          data: Object.values(regionCount),\n          backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)']\n        }]\n      },\n      topicChart: {\n        labels: Object.keys(topicCount),\n        datasets: [{\n          label: 'Topics Distribution',\n          data: Object.values(topicCount),\n          backgroundColor: 'rgba(54, 162, 235, 0.8)'\n        }]\n      },\n      countryChart: {\n        labels: Object.entries(countryData).sort((a, b) => b[1] - a[1]).slice(0, 10).map(([country]) => country),\n        datasets: [{\n          label: 'Top 10 Countries',\n          data: Object.entries(countryData).sort((a, b) => b[1] - a[1]).slice(0, 10).map(([, count]) => count),\n          backgroundColor: 'rgba(153, 102, 255, 0.8)'\n        }]\n      },\n      cityChart: {\n        labels: Object.entries(cityData).sort((a, b) => b[1] - a[1]).slice(0, 10).map(([city]) => city),\n        datasets: [{\n          label: 'Top 10 Cities',\n          data: Object.entries(cityData).sort((a, b) => b[1] - a[1]).slice(0, 10).map(([, count]) => count),\n          backgroundColor: 'rgba(255, 159, 64, 0.8)'\n        }]\n      },\n      sectorChart: {\n        labels: Object.keys(sectorData),\n        datasets: [{\n          data: Object.values(sectorData),\n          backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)']\n        }]\n      },\n      swotChart: {\n        labels: Object.keys(swotData),\n        datasets: [{\n          label: 'SWOT Analysis',\n          data: Object.values(swotData),\n          backgroundColor: ['rgba(75, 192, 192, 0.8)', 'rgba(255, 99, 132, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(153, 102, 255, 0.8)']\n        }]\n      }\n    };\n  }, [processedData]);\n  const filterOptions = useMemo(() => ({\n    endYear: [...new Set(data.map(item => item.end_year))].filter(Boolean).sort(),\n    topics: [...new Set(data.map(item => item.topic))].filter(Boolean).sort(),\n    regions: [...new Set(data.map(item => item.region))].filter(Boolean).sort(),\n    pest: [...new Set(data.map(item => item.pestle))].filter(Boolean).sort(),\n    sources: [...new Set(data.map(item => item.source))].filter(Boolean).sort(),\n    swot: [...new Set(data.map(item => item.swot))].filter(Boolean).sort(),\n    countries: [...new Set(data.map(item => item.country))].filter(Boolean).sort(),\n    cities: [...new Set(data.map(item => item.city))].filter(Boolean).sort(),\n    sectors: [...new Set(data.map(item => item.sector))].filter(Boolean).sort()\n  }), [data]);\n  const handleFilterChange = e => {\n    setFilters({\n      ...filters,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleReset = () => {\n    setFilters({\n      endYear: 'all',\n      topic: 'all',\n      sector: 'all',\n      region: 'all',\n      pest: 'all',\n      source: 'all',\n      swot: 'all',\n      country: 'all',\n      city: 'all'\n    });\n    setResetFilters(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Data Visualization Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"endYear\",\n        value: filters.endYear,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All End Years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), filterOptions.endYear.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"topic\",\n        value: filters.topic,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), filterOptions.topics.map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topic,\n          children: topic\n        }, topic, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"sector\",\n        value: filters.sector,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Sectors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), filterOptions.sectors.map(sector => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: sector,\n          children: sector\n        }, sector, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"region\",\n        value: filters.region,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Regions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), filterOptions.regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: region,\n          children: region\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"pest\",\n        value: filters.pest,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All PEST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), filterOptions.pest.map(pest => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pest,\n          children: pest\n        }, pest, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"source\",\n        value: filters.source,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Sources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), filterOptions.sources.map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: source,\n          children: source\n        }, source, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"swot\",\n        value: filters.swot,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All SWOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), filterOptions.swot.map(swot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: swot,\n          children: swot\n        }, swot, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"country\",\n        value: filters.country,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), filterOptions.countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"city\",\n        value: filters.city,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), filterOptions.cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        className: \"p-2 bg-red-500 text-white rounded\",\n        children: \"Reset Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: \"Metrics Over Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          options: options,\n          data: chartData.metricsOverTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: \"Region Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n          options: options,\n          data: chartData.regionChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: \"Topic Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          options: options,\n          data: chartData.topicChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: \"Top 10 Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          options: options,\n          data: chartData.countryChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: \"Top 10 Cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          options: options,\n          data: chartData.cityChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: \"Sector Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          options: options,\n          data: chartData.sectorChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: \"SWOT Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n          options: options,\n          data: chartData.swotChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardApp, \"hZtR5meavLVZO9WPt7o3B7SD+48=\", false, function () {\n  return [useData];\n});\n_c = DashboardApp;\nexport default DashboardApp;\nvar _c;\n$RefreshReg$(_c, \"DashboardApp\");","map":{"version":3,"names":["React","useState","useMemo","useData","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","RadialLinearScale","Line","Bar","Pie","Doughnut","jsxDEV","_jsxDEV","register","DashboardApp","_s","data","filters","setFilters","endYear","topic","sector","region","pest","source","swot","country","city","resetFilters","setResetFilters","options","responsive","maintainAspectRatio","plugins","legend","position","processedData","filter","item","end_year","parseInt","pestle","chartData","regionCount","topicCount","yearlyMetrics","sectorData","countryData","cityData","swotData","forEach","intensity","sum","count","likelihood","relevance","years","Object","keys","sort","yearlyData","map","year","metricsOverTime","labels","datasets","label","borderColor","tension","regionChart","values","backgroundColor","topicChart","countryChart","entries","a","b","slice","cityChart","sectorChart","swotChart","filterOptions","Set","Boolean","topics","regions","sources","countries","cities","sectors","handleFilterChange","e","target","name","value","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hall_/Desktop/Bid/frontend/src/components/DashboardApp.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { useData } from '../services/DataContext';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  RadialLinearScale,\r\n} from 'chart.js';\r\nimport { Line, Bar, Pie, Doughnut } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  RadialLinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst DashboardApp = () => {\r\n  const { data } = useData();\r\n  const [filters, setFilters] = useState({\r\n    endYear: 'all',\r\n    topic: 'all',\r\n    sector: 'all',\r\n    region: 'all',\r\n    pest: 'all',\r\n    source: 'all',\r\n    swot: 'all',\r\n    country: 'all',\r\n    city: 'all',\r\n  });\r\n  const [resetFilters, setResetFilters] = useState(false);\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n\r\n  const processedData = useMemo(() => {\r\n    return data.filter(item => {\r\n      return (\r\n        (filters.endYear === 'all' || item.end_year === parseInt(filters.endYear)) &&\r\n        (filters.topic === 'all' || item.topic === filters.topic) &&\r\n        (filters.sector === 'all' || item.sector === filters.sector) &&\r\n        (filters.region === 'all' || item.region === filters.region) &&\r\n        (filters.pest === 'all' || item.pestle === filters.pest) &&\r\n        (filters.source === 'all' || item.source === filters.source) &&\r\n        (filters.swot === 'all' || item.swot === filters.swot) &&\r\n        (filters.country === 'all' || item.country === filters.country) &&\r\n        (filters.city === 'all' || item.city === filters.city)\r\n      );\r\n    });\r\n  }, [data, filters]);\r\n\r\n  const chartData = useMemo(() => {\r\n    const regionCount = {};\r\n    const topicCount = {};\r\n    const yearlyMetrics = {};\r\n    const sectorData = {};\r\n    const countryData = {};\r\n    const cityData = {};\r\n    const swotData = {};\r\n\r\n    processedData.forEach(item => {\r\n      if (item.region) {\r\n        regionCount[item.region] = (regionCount[item.region] || 0) + 1;\r\n      }\r\n      if (item.topic) {\r\n        topicCount[item.topic] = (topicCount[item.topic] || 0) + 1;\r\n      }\r\n      if (item.country) {\r\n        countryData[item.country] = (countryData[item.country] || 0) + 1;\r\n      }\r\n      if (item.city && item.city !== \"\") {\r\n        cityData[item.city] = (cityData[item.city] || 0) + 1;\r\n      }\r\n      if (item.sector) {\r\n        sectorData[item.sector] = (sectorData[item.sector] || 0) + 1;\r\n      }\r\n      if (item.swot && item.swot !== \"\") {\r\n        swotData[item.swot] = (swotData[item.swot] || 0) + 1;\r\n      }\r\n\r\n      if (item.end_year) {\r\n        if (!yearlyMetrics[item.end_year]) {\r\n          yearlyMetrics[item.end_year] = {\r\n            intensity: { sum: 0, count: 0 },\r\n            likelihood: { sum: 0, count: 0 },\r\n            relevance: { sum: 0, count: 0 }\r\n          };\r\n        }\r\n        if (item.intensity) {\r\n          yearlyMetrics[item.end_year].intensity.sum += item.intensity;\r\n          yearlyMetrics[item.end_year].intensity.count += 1;\r\n        }\r\n        if (item.likelihood) {\r\n          yearlyMetrics[item.end_year].likelihood.sum += item.likelihood;\r\n          yearlyMetrics[item.end_year].likelihood.count += 1;\r\n        }\r\n        if (item.relevance) {\r\n          yearlyMetrics[item.end_year].relevance.sum += item.relevance;\r\n          yearlyMetrics[item.end_year].relevance.count += 1;\r\n        }\r\n      }\r\n    });\r\n\r\n    const years = Object.keys(yearlyMetrics).sort();\r\n    const yearlyData = {\r\n      intensity: years.map(year => \r\n        yearlyMetrics[year].intensity.count > 0 \r\n          ? yearlyMetrics[year].intensity.sum / yearlyMetrics[year].intensity.count \r\n          : 0\r\n      ),\r\n      likelihood: years.map(year => \r\n        yearlyMetrics[year].likelihood.count > 0 \r\n          ? yearlyMetrics[year].likelihood.sum / yearlyMetrics[year].likelihood.count \r\n          : 0\r\n      ),\r\n      relevance: years.map(year => \r\n        yearlyMetrics[year].relevance.count > 0 \r\n          ? yearlyMetrics[year].relevance.sum / yearlyMetrics[year].relevance.count \r\n          : 0\r\n      )\r\n    };\r\n\r\n    return {\r\n      metricsOverTime: {\r\n        labels: years,\r\n        datasets: [\r\n          {\r\n            label: 'Intensity',\r\n            data: yearlyData.intensity,\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            tension: 0.1,\r\n          },\r\n          {\r\n            label: 'Likelihood',\r\n            data: yearlyData.likelihood,\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            tension: 0.1,\r\n          },\r\n          {\r\n            label: 'Relevance',\r\n            data: yearlyData.relevance,\r\n            borderColor: 'rgb(153, 102, 255)',\r\n            tension: 0.1,\r\n          }\r\n        ],\r\n      },\r\n      regionChart: {\r\n        labels: Object.keys(regionCount),\r\n        datasets: [{\r\n          data: Object.values(regionCount),\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.8)',\r\n            'rgba(54, 162, 235, 0.8)',\r\n            'rgba(255, 206, 86, 0.8)',\r\n            'rgba(75, 192, 192, 0.8)',\r\n            'rgba(153, 102, 255, 0.8)',\r\n          ],\r\n        }],\r\n      },\r\n      topicChart: {\r\n        labels: Object.keys(topicCount),\r\n        datasets: [{\r\n          label: 'Topics Distribution',\r\n          data: Object.values(topicCount),\r\n          backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n        }],\r\n      },\r\n      countryChart: {\r\n        labels: Object.entries(countryData)\r\n          .sort((a, b) => b[1] - a[1])\r\n          .slice(0, 10)\r\n          .map(([country]) => country),\r\n        datasets: [{\r\n          label: 'Top 10 Countries',\r\n          data: Object.entries(countryData)\r\n            .sort((a, b) => b[1] - a[1])\r\n            .slice(0, 10)\r\n            .map(([, count]) => count),\r\n          backgroundColor: 'rgba(153, 102, 255, 0.8)',\r\n        }],\r\n      },\r\n      cityChart: {\r\n        labels: Object.entries(cityData)\r\n          .sort((a, b) => b[1] - a[1])\r\n          .slice(0, 10)\r\n          .map(([city]) => city),\r\n        datasets: [{\r\n          label: 'Top 10 Cities',\r\n          data: Object.entries(cityData)\r\n            .sort((a, b) => b[1] - a[1])\r\n            .slice(0, 10)\r\n            .map(([, count]) => count),\r\n          backgroundColor: 'rgba(255, 159, 64, 0.8)',\r\n        }],\r\n      },\r\n      sectorChart: {\r\n        labels: Object.keys(sectorData),\r\n        datasets: [{\r\n          data: Object.values(sectorData),\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.8)',\r\n            'rgba(54, 162, 235, 0.8)',\r\n            'rgba(255, 206, 86, 0.8)',\r\n            'rgba(75, 192, 192, 0.8)',\r\n            'rgba(153, 102, 255, 0.8)',\r\n          ],\r\n        }],\r\n      },\r\n      swotChart: {\r\n        labels: Object.keys(swotData),\r\n        datasets: [{\r\n          label: 'SWOT Analysis',\r\n          data: Object.values(swotData),\r\n          backgroundColor: [\r\n            'rgba(75, 192, 192, 0.8)',\r\n            'rgba(255, 99, 132, 0.8)',\r\n            'rgba(255, 206, 86, 0.8)',\r\n            'rgba(153, 102, 255, 0.8)',\r\n          ],\r\n        }],\r\n      },\r\n    };\r\n  }, [processedData]);\r\n\r\n  const filterOptions = useMemo(() => ({\r\n    endYear: [...new Set(data.map(item => item.end_year))].filter(Boolean).sort(),\r\n    topics: [...new Set(data.map(item => item.topic))].filter(Boolean).sort(),\r\n    regions: [...new Set(data.map(item => item.region))].filter(Boolean).sort(),\r\n    pest: [...new Set(data.map(item => item.pestle))].filter(Boolean).sort(),\r\n    sources: [...new Set(data.map(item => item.source))].filter(Boolean).sort(),\r\n    swot: [...new Set(data.map(item => item.swot))].filter(Boolean).sort(),\r\n    countries: [...new Set(data.map(item => item.country))].filter(Boolean).sort(),\r\n    cities: [...new Set(data.map(item => item.city))].filter(Boolean).sort(),\r\n    sectors: [...new Set(data.map(item => item.sector))].filter(Boolean).sort(),\r\n  }), [data]);\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFilters({\r\n      endYear: 'all',\r\n      topic: 'all',\r\n      sector: 'all',\r\n      region: 'all',\r\n      pest: 'all',\r\n      source: 'all',\r\n      swot: 'all',\r\n      country: 'all',\r\n      city: 'all',\r\n    });\r\n    setResetFilters(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8 space-y-6\">\r\n      <h1 className=\"text-2xl font-bold\">Data Visualization Dashboard</h1>\r\n\r\n      {/* Filters Section */}\r\n      <div className=\"space-y-4\">\r\n        <select name=\"endYear\" value={filters.endYear} onChange={handleFilterChange}>\r\n          <option value=\"all\">All End Years</option>\r\n          {filterOptions.endYear.map(year => (\r\n            <option key={year} value={year}>{year}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select name=\"topic\" value={filters.topic} onChange={handleFilterChange}>\r\n          <option value=\"all\">All Topics</option>\r\n          {filterOptions.topics.map(topic => (\r\n            <option key={topic} value={topic}>{topic}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select name=\"sector\" value={filters.sector} onChange={handleFilterChange}>\r\n          <option value=\"all\">All Sectors</option>\r\n          {filterOptions.sectors.map(sector => (\r\n            <option key={sector} value={sector}>{sector}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select name=\"region\" value={filters.region} onChange={handleFilterChange}>\r\n          <option value=\"all\">All Regions</option>\r\n          {filterOptions.regions.map(region => (\r\n            <option key={region} value={region}>{region}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select name=\"pest\" value={filters.pest} onChange={handleFilterChange}>\r\n          <option value=\"all\">All PEST</option>\r\n          {filterOptions.pest.map(pest => (\r\n            <option key={pest} value={pest}>{pest}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select name=\"source\" value={filters.source} onChange={handleFilterChange}>\r\n          <option value=\"all\">All Sources</option>\r\n          {filterOptions.sources.map(source => (\r\n            <option key={source} value={source}>{source}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select name=\"swot\" value={filters.swot} onChange={handleFilterChange}>\r\n          <option value=\"all\">All SWOT</option>\r\n          {filterOptions.swot.map(swot => (\r\n            <option key={swot} value={swot}>{swot}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select name=\"country\" value={filters.country} onChange={handleFilterChange}>\r\n          <option value=\"all\">All Countries</option>\r\n          {filterOptions.countries.map(country => (\r\n            <option key={country} value={country}>{country}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select name=\"city\" value={filters.city} onChange={handleFilterChange}>\r\n          <option value=\"all\">All Cities</option>\r\n          {filterOptions.cities.map(city => (\r\n            <option key={city} value={city}>{city}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <button onClick={handleReset} className=\"p-2 bg-red-500 text-white rounded\">\r\n          Reset Filters\r\n        </button>\r\n      </div>\r\n\r\n      {/* Render Charts */}\r\n      <div className=\"space-y-6\">\r\n        {/* Metrics Over Time */}\r\n        <div className=\"chart-container\">\r\n          <h2 className=\"text-xl font-semibold\">Metrics Over Time</h2>\r\n          <Line options={options} data={chartData.metricsOverTime} />\r\n        </div>\r\n\r\n        {/* Region Distribution */}\r\n        <div className=\"chart-container\">\r\n          <h2 className=\"text-xl font-semibold\">Region Distribution</h2>\r\n          <Doughnut options={options} data={chartData.regionChart} />\r\n        </div>\r\n\r\n        {/* Topic Distribution */}\r\n        <div className=\"chart-container\">\r\n          <h2 className=\"text-xl font-semibold\">Topic Distribution</h2>\r\n          <Bar options={options} data={chartData.topicChart} />\r\n        </div>\r\n\r\n        {/* Top 10 Countries */}\r\n        <div className=\"chart-container\">\r\n          <h2 className=\"text-xl font-semibold\">Top 10 Countries</h2>\r\n          <Pie options={options} data={chartData.countryChart} />\r\n        </div>\r\n\r\n        {/* Top 10 Cities */}\r\n        <div className=\"chart-container\">\r\n          <h2 className=\"text-xl font-semibold\">Top 10 Cities</h2>\r\n          <Pie options={options} data={chartData.cityChart} />\r\n        </div>\r\n\r\n        {/* Sector Distribution */}\r\n        <div className=\"chart-container\">\r\n          <h2 className=\"text-xl font-semibold\">Sector Distribution</h2>\r\n          <Bar options={options} data={chartData.sectorChart} />\r\n        </div>\r\n\r\n        {/* SWOT Analysis */}\r\n        <div className=\"chart-container\">\r\n          <h2 className=\"text-xl font-semibold\">SWOT Analysis</h2>\r\n          <Doughnut options={options} data={chartData.swotChart} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}