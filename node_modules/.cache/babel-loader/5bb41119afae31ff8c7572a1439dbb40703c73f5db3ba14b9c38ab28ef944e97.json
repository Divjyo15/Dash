{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hall_\\\\Desktop\\\\Bid\\\\frontend\\\\src\\\\components\\\\DataVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, BarController // Added BarController\n} from 'chart.js';\n\n// Register ALL required components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, BarElement, BarController,\n// Register BarController\nTitle, Tooltip, Legend);\nconst DataVisualization = ({\n  chartData,\n  chartType,\n  title\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    // Always clean up the existing chart first\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n    const ctx = canvasRef.current.getContext('2d');\n\n    // Create new chart\n    chartRef.current = new Chart(ctx, {\n      type: 'bar',\n      // Explicitly set to 'bar' instead of using chartType\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          title: {\n            display: true,\n            text: title,\n            padding: 20,\n            font: {\n              size: 16,\n              weight: 'bold'\n            }\n          },\n          legend: {\n            position: 'bottom'\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n\n    // Cleanup function\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n      }\n    };\n  }, [chartData, title]); // Removed chartType from dependencies since we're using fixed 'bar' type\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-lg p-4 mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '400px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(DataVisualization, \"WDVG+s/RUdgzBQM+WtvU+4sd8NI=\");\n_c = DataVisualization;\nexport default DataVisualization;\nvar _c;\n$RefreshReg$(_c, \"DataVisualization\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","BarController","jsxDEV","_jsxDEV","register","DataVisualization","chartData","chartType","title","_s","canvasRef","chartRef","current","destroy","ctx","getContext","type","data","options","responsive","maintainAspectRatio","plugins","display","text","padding","font","size","weight","legend","position","scales","y","beginAtZero","className","children","style","height","width","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hall_/Desktop/Bid/frontend/src/components/DataVisualization.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport {\r\n  Chart,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarController  // Added BarController\r\n} from 'chart.js';\r\n\r\n// Register ALL required components\r\nChart.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  BarController,  // Register BarController\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst DataVisualization = ({ chartData, chartType, title }) => {\r\n  const canvasRef = useRef(null);\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Always clean up the existing chart first\r\n    if (chartRef.current) {\r\n      chartRef.current.destroy();\r\n    }\r\n\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    \r\n    // Create new chart\r\n    chartRef.current = new Chart(ctx, {\r\n      type: 'bar',  // Explicitly set to 'bar' instead of using chartType\r\n      data: chartData,\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: title,\r\n            padding: 20,\r\n            font: {\r\n              size: 16,\r\n              weight: 'bold'\r\n            }\r\n          },\r\n          legend: {\r\n            position: 'bottom'\r\n          }\r\n        },\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy();\r\n      }\r\n    };\r\n  }, [chartData, title]); // Removed chartType from dependencies since we're using fixed 'bar' type\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg p-4 mb-4\">\r\n      <div style={{ height: '400px', width: '100%' }}>\r\n        <canvas ref={canvasRef}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataVisualization;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SACEC,KAAK,EACLC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,aAAa,CAAE;AAAA,OACV,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAT,KAAK,CAACU,QAAQ,CACZT,aAAa,EACbC,WAAW,EACXC,UAAU,EACVI,aAAa;AAAG;AAChBH,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMK,iBAAiB,GAAGA,CAAC;EAAEC,SAAS;EAAEC,SAAS;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAMC,SAAS,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMkB,QAAQ,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd;IACA,IAAImB,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;IAEA,MAAMC,GAAG,GAAGJ,SAAS,CAACE,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;;IAE9C;IACAJ,QAAQ,CAACC,OAAO,GAAG,IAAIlB,KAAK,CAACoB,GAAG,EAAE;MAChCE,IAAI,EAAE,KAAK;MAAG;MACdC,IAAI,EAAEX,SAAS;MACfY,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,OAAO,EAAE;UACPb,KAAK,EAAE;YACLc,OAAO,EAAE,IAAI;YACbC,IAAI,EAAEf,KAAK;YACXgB,OAAO,EAAE,EAAE;YACXC,IAAI,EAAE;cACJC,IAAI,EAAE,EAAE;cACRC,MAAM,EAAE;YACV;UACF,CAAC;UACDC,MAAM,EAAE;YACNC,QAAQ,EAAE;UACZ;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACX,IAAIrB,QAAQ,CAACC,OAAO,EAAE;QACpBD,QAAQ,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,CAACP,SAAS,EAAEE,KAAK,CAAC,CAAC,CAAC,CAAC;;EAExB,oBACEL,OAAA;IAAK8B,SAAS,EAAC,wCAAwC;IAAAC,QAAA,eACrD/B,OAAA;MAAKgC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAH,QAAA,eAC7C/B,OAAA;QAAQmC,GAAG,EAAE5B;MAAU;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjC,EAAA,CAxDIJ,iBAAiB;AAAAsC,EAAA,GAAjBtC,iBAAiB;AA0DvB,eAAeA,iBAAiB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}