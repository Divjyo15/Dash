{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hall_\\\\Desktop\\\\Bid\\\\frontend\\\\src\\\\components\\\\DashboardApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { useData } from '../services/DataContext';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line, Bar, Pie, Doughnut } from 'react-chartjs-2';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const {\n    data,\n    filters,\n    setFilters\n  } = useData();\n\n  // Chart.js options\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    }\n  };\n\n  // Aggregate data for different visualizations\n  const chartData = useMemo(() => {\n    const regionCount = {};\n    const topicCount = {};\n    const yearlyIntensity = {};\n    const sectorData = {};\n    data.forEach(item => {\n      if (item.region) regionCount[item.region] = (regionCount[item.region] || 0) + 1;\n      if (item.topic) topicCount[item.topic] = (topicCount[item.topic] || 0) + 1;\n      if (item.year) {\n        if (!yearlyIntensity[item.year]) {\n          yearlyIntensity[item.year] = {\n            intensity: 0,\n            count: 0\n          };\n        }\n        yearlyIntensity[item.year].intensity += item.intensity || 0;\n        yearlyIntensity[item.year].count += 1;\n      }\n      if (item.sector) sectorData[item.sector] = (sectorData[item.sector] || 0) + 1;\n    });\n\n    // Calculate average intensity per year\n    Object.keys(yearlyIntensity).forEach(year => {\n      yearlyIntensity[year] = yearlyIntensity[year].intensity / yearlyIntensity[year].count;\n    });\n    return {\n      regionChart: {\n        labels: Object.keys(regionCount),\n        datasets: [{\n          data: Object.values(regionCount),\n          backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)']\n        }]\n      },\n      topicChart: {\n        labels: Object.keys(topicCount),\n        datasets: [{\n          label: 'Topics Distribution',\n          data: Object.values(topicCount),\n          backgroundColor: 'rgba(54, 162, 235, 0.8)'\n        }]\n      },\n      intensityChart: {\n        labels: Object.keys(yearlyIntensity),\n        datasets: [{\n          label: 'Average Intensity',\n          data: Object.values(yearlyIntensity),\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      },\n      sectorChart: {\n        labels: Object.keys(sectorData),\n        datasets: [{\n          data: Object.values(sectorData),\n          backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)']\n        }]\n      }\n    };\n  }, [data]);\n\n  // Extract unique values for filters\n  const filterOptions = useMemo(() => ({\n    years: [...new Set(data.map(item => item.year))].filter(Boolean).sort(),\n    topics: [...new Set(data.map(item => item.topic))].filter(Boolean).sort(),\n    regions: [...new Set(data.map(item => item.region))].filter(Boolean).sort(),\n    pestles: [...new Set(data.map(item => item.pestle))].filter(Boolean).sort(),\n    sources: [...new Set(data.map(item => item.source))].filter(Boolean).sort(),\n    countries: [...new Set(data.map(item => item.country))].filter(Boolean).sort(),\n    sectors: [...new Set(data.map(item => item.sector))].filter(Boolean).sort()\n  }), [data]);\n  const handleFilterChange = (value, filterType) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n  };\n  const FilterSelect = ({\n    options,\n    value,\n    onChange,\n    label\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      value: value,\n      onValueChange: onChange,\n      children: [/*#__PURE__*/_jsxDEV(SelectTrigger, {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(SelectValue, {\n          placeholder: `Select ${label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectContent, {\n        children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n          value: \"all\",\n          children: [\"All \", label, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), options.map(option => /*#__PURE__*/_jsxDEV(SelectItem, {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(FilterSelect, {\n        options: filterOptions.years,\n        value: filters.year,\n        onChange: value => handleFilterChange(value, 'year'),\n        label: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterSelect, {\n        options: filterOptions.topics,\n        value: filters.topic,\n        onChange: value => handleFilterChange(value, 'topic'),\n        label: \"Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterSelect, {\n        options: filterOptions.sectors,\n        value: filters.sector,\n        onChange: value => handleFilterChange(value, 'sector'),\n        label: \"Sector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterSelect, {\n        options: filterOptions.regions,\n        value: filters.region,\n        onChange: value => handleFilterChange(value, 'region'),\n        label: \"Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Intensity Trend Over Years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-80\",\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              options: options,\n              data: chartData.intensityChart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Regional Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-80\",\n            children: /*#__PURE__*/_jsxDEV(Doughnut, {\n              options: options,\n              data: chartData.regionChart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Topics Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-80\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              options: {\n                ...options,\n                indexAxis: 'y',\n                plugins: {\n                  ...options.plugins,\n                  legend: {\n                    display: false\n                  }\n                }\n              },\n              data: chartData.topicChart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Sector Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-80\",\n            children: /*#__PURE__*/_jsxDEV(Pie, {\n              options: options,\n              data: chartData.sectorChart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"VbmGElYUxToC5GIdaRz/DlsvoCI=\", false, function () {\n  return [useData];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useMemo","useData","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","Line","Bar","Pie","Doughnut","Card","CardHeader","CardTitle","CardContent","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","jsxDEV","_jsxDEV","register","Dashboard","_s","data","filters","setFilters","options","responsive","maintainAspectRatio","plugins","legend","position","chartData","regionCount","topicCount","yearlyIntensity","sectorData","forEach","item","region","topic","year","intensity","count","sector","Object","keys","regionChart","labels","datasets","values","backgroundColor","topicChart","label","intensityChart","borderColor","tension","sectorChart","filterOptions","years","Set","map","filter","Boolean","sort","topics","regions","pestles","pestle","sources","source","countries","country","sectors","handleFilterChange","value","filterType","prev","FilterSelect","onChange","className","children","onValueChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","option","indexAxis","display","_c","$RefreshReg$"],"sources":["C:/Users/hall_/Desktop/Bid/frontend/src/components/DashboardApp.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { useData } from '../services/DataContext';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line, Bar, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const { data, filters, setFilters } = useData();\r\n  \r\n  // Chart.js options\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n\r\n  // Aggregate data for different visualizations\r\n  const chartData = useMemo(() => {\r\n    const regionCount = {};\r\n    const topicCount = {};\r\n    const yearlyIntensity = {};\r\n    const sectorData = {};\r\n\r\n    data.forEach(item => {\r\n      if (item.region) regionCount[item.region] = (regionCount[item.region] || 0) + 1;\r\n      if (item.topic) topicCount[item.topic] = (topicCount[item.topic] || 0) + 1;\r\n      if (item.year) {\r\n        if (!yearlyIntensity[item.year]) {\r\n          yearlyIntensity[item.year] = {\r\n            intensity: 0,\r\n            count: 0\r\n          };\r\n        }\r\n        yearlyIntensity[item.year].intensity += item.intensity || 0;\r\n        yearlyIntensity[item.year].count += 1;\r\n      }\r\n      if (item.sector) sectorData[item.sector] = (sectorData[item.sector] || 0) + 1;\r\n    });\r\n\r\n    // Calculate average intensity per year\r\n    Object.keys(yearlyIntensity).forEach(year => {\r\n      yearlyIntensity[year] = yearlyIntensity[year].intensity / yearlyIntensity[year].count;\r\n    });\r\n\r\n    return {\r\n      regionChart: {\r\n        labels: Object.keys(regionCount),\r\n        datasets: [{\r\n          data: Object.values(regionCount),\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.8)',\r\n            'rgba(54, 162, 235, 0.8)',\r\n            'rgba(255, 206, 86, 0.8)',\r\n            'rgba(75, 192, 192, 0.8)',\r\n            'rgba(153, 102, 255, 0.8)',\r\n          ],\r\n        }],\r\n      },\r\n      topicChart: {\r\n        labels: Object.keys(topicCount),\r\n        datasets: [{\r\n          label: 'Topics Distribution',\r\n          data: Object.values(topicCount),\r\n          backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n        }],\r\n      },\r\n      intensityChart: {\r\n        labels: Object.keys(yearlyIntensity),\r\n        datasets: [{\r\n          label: 'Average Intensity',\r\n          data: Object.values(yearlyIntensity),\r\n          borderColor: 'rgb(75, 192, 192)',\r\n          tension: 0.1,\r\n        }],\r\n      },\r\n      sectorChart: {\r\n        labels: Object.keys(sectorData),\r\n        datasets: [{\r\n          data: Object.values(sectorData),\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.8)',\r\n            'rgba(54, 162, 235, 0.8)',\r\n            'rgba(255, 206, 86, 0.8)',\r\n            'rgba(75, 192, 192, 0.8)',\r\n            'rgba(153, 102, 255, 0.8)',\r\n          ],\r\n        }],\r\n      },\r\n    };\r\n  }, [data]);\r\n\r\n  // Extract unique values for filters\r\n  const filterOptions = useMemo(() => ({\r\n    years: [...new Set(data.map(item => item.year))].filter(Boolean).sort(),\r\n    topics: [...new Set(data.map(item => item.topic))].filter(Boolean).sort(),\r\n    regions: [...new Set(data.map(item => item.region))].filter(Boolean).sort(),\r\n    pestles: [...new Set(data.map(item => item.pestle))].filter(Boolean).sort(),\r\n    sources: [...new Set(data.map(item => item.source))].filter(Boolean).sort(),\r\n    countries: [...new Set(data.map(item => item.country))].filter(Boolean).sort(),\r\n    sectors: [...new Set(data.map(item => item.sector))].filter(Boolean).sort(),\r\n  }), [data]);\r\n\r\n  const handleFilterChange = (value, filterType) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [filterType]: value\r\n    }));\r\n  };\r\n\r\n  const FilterSelect = ({ options, value, onChange, label }) => (\r\n    <div className=\"mb-4\">\r\n      <Select value={value} onValueChange={onChange}>\r\n        <SelectTrigger className=\"w-full\">\r\n          <SelectValue placeholder={`Select ${label}`} />\r\n        </SelectTrigger>\r\n        <SelectContent>\r\n          <SelectItem value=\"all\">All {label}s</SelectItem>\r\n          {options.map(option => (\r\n            <SelectItem key={option} value={option}>\r\n              {option}\r\n            </SelectItem>\r\n          ))}\r\n        </SelectContent>\r\n      </Select>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      {/* Filters */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <FilterSelect \r\n          options={filterOptions.years}\r\n          value={filters.year}\r\n          onChange={(value) => handleFilterChange(value, 'year')}\r\n          label=\"Year\"\r\n        />\r\n        <FilterSelect \r\n          options={filterOptions.topics}\r\n          value={filters.topic}\r\n          onChange={(value) => handleFilterChange(value, 'topic')}\r\n          label=\"Topic\"\r\n        />\r\n        <FilterSelect \r\n          options={filterOptions.sectors}\r\n          value={filters.sector}\r\n          onChange={(value) => handleFilterChange(value, 'sector')}\r\n          label=\"Sector\"\r\n        />\r\n        <FilterSelect \r\n          options={filterOptions.regions}\r\n          value={filters.region}\r\n          onChange={(value) => handleFilterChange(value, 'region')}\r\n          label=\"Region\"\r\n        />\r\n      </div>\r\n\r\n      {/* Charts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Intensity Trend Over Years</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"h-80\">\r\n              <Line options={options} data={chartData.intensityChart} />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Regional Distribution</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"h-80\">\r\n              <Doughnut options={options} data={chartData.regionChart} />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Topics Distribution</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"h-80\">\r\n              <Bar options={{\r\n                ...options,\r\n                indexAxis: 'y',\r\n                plugins: {\r\n                  ...options.plugins,\r\n                  legend: {\r\n                    display: false\r\n                  }\r\n                }\r\n              }} data={chartData.topicChart} />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Sector Distribution</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"h-80\">\r\n              <Pie options={options} data={chartData.sectorChart} />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}