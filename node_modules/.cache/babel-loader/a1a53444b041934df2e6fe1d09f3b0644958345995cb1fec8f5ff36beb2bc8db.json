{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hall_\\\\Desktop\\\\Bid\\\\frontend\\\\src\\\\components\\\\DashboardApp.js\",\n  _s = $RefreshSig$();\n/*import React from 'react';\r\nimport { useData } from '../services/DataContext'; // Import the custom context\r\nimport {\r\n  LineChart, Line, BarChart, Bar, PieChart, Pie, ScatterChart, Scatter,\r\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell\r\n} from 'recharts';\r\n\r\nconst Select = ({ label, options, value, onChange }) => (\r\n  <div className=\"mb-4\">\r\n    <label className=\"block text-sm font-medium text-gray-700 mb-1\">{label}</label>\r\n    <select value={value} onChange={(e) => onChange(e.target.value)} className=\"w-full border rounded p-2\">\r\n      <option value=\"all\">All {label}s</option>\r\n      {options.map((option) => (\r\n        <option key={option} value={option}>{option}</option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n);\r\n\r\nconst DashboardApp = () => {\r\n  const { data, filters, setFilters } = useData(); // Access data and filters from context\r\n\r\n  return (\r\n    <div className=\"p-8 bg-gray-100 min-h-screen\">\r\n      <h1 className=\"text-3xl font-bold mb-8\">Data Analysis Dashboard</h1>\r\n\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\r\n        <Select\r\n          label=\"Year\"\r\n          options={['2020', '2021', '2022']}\r\n          value={filters.year}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, year: value }))}\r\n        />\r\n        <Select\r\n          label=\"Topic\"\r\n          options={['AI', 'Healthcare', 'Climate']}\r\n          value={filters.topic}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, topic: value }))}\r\n        />\r\n        <Select\r\n          label=\"Region\"\r\n          options={['North America', 'Europe', 'Asia']}\r\n          value={filters.region}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, region: value }))}\r\n        />\r\n        <Select\r\n          label=\"PEST\"\r\n          options={['Social', 'Economic', 'Environmental']}\r\n          value={filters.pestle}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, pestle: value }))}\r\n        />\r\n        <Select\r\n          label=\"Source\"\r\n          options={['Report', 'Survey', 'Journal']}\r\n          value={filters.source}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, source: value }))}\r\n        />\r\n        <Select\r\n          label=\"SWOT\"\r\n          options={['Strength', 'Opportunity', 'Threat']}\r\n          value={filters.swot}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, swot: value }))}\r\n        />\r\n        <Select\r\n          label=\"Country\"\r\n          options={['USA', 'France', 'India']}\r\n          value={filters.country}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, country: value }))}\r\n        />\r\n        <Select\r\n          label=\"City\"\r\n          options={['New York', 'Paris', 'Delhi']}\r\n          value={filters.city}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, city: value }))}\r\n        />\r\n      </div>\r\n\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Intensity & Likelihood Trends</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"year\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"intensity\" stroke=\"#3b82f6\" strokeWidth={2} />\r\n              <Line type=\"monotone\" dataKey=\"likelihood\" stroke=\"#10b981\" strokeWidth={2} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Relevance by Region</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"region\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"relevance\" fill=\"#8b5cf6\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Topics Distribution</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n              <Pie data={data} dataKey=\"relevance\" nameKey=\"topic\" cx=\"50%\" cy=\"50%\" outerRadius={100}>\r\n                {data.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={[\"#0088FE\", \"#00C49F\", \"#FFBB28\"][index % 3]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n              <Legend />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Intensity vs Likelihood</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"intensity\" name=\"Intensity\" />\r\n              <YAxis dataKey=\"likelihood\" name=\"Likelihood\" />\r\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n              <Legend />\r\n              <Scatter name=\"Data Points\" data={data} fill=\"#8884d8\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardApp;\r\n*/\nimport React from 'react';\nimport { useData } from '../services/DataContext';\nimport { LineChart, Line, BarChart, Bar, PieChart, Pie, ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Select = ({\n  label,\n  options,\n  value,\n  onChange\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"mb-4\",\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"block text-sm font-medium text-gray-700 mb-1\",\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    value: value,\n    onChange: e => onChange(e.target.value),\n    className: \"w-full border rounded p-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"all\",\n      children: [\"All \", label, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option,\n      children: option\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 157,\n  columnNumber: 3\n}, this);\n_c = Select;\nconst DashboardApp = () => {\n  _s();\n  const {\n    filters,\n    setFilters,\n    getChartData,\n    isLoading\n  } = useData();\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8\",\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-8\",\n      children: \"Data Analysis Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        label: \"Year\",\n        options: ['2020', '2021', '2022'],\n        value: filters.year,\n        onChange: value => setFilters(prev => ({\n          ...prev,\n          year: value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Intensity & Likelihood Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: getChartData('trends'),\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"intensity\",\n              stroke: \"#3b82f6\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"likelihood\",\n              stroke: \"#10b981\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Relevance by Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: getChartData('regions'),\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"relevance\",\n              fill: \"#8b5cf6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Topics Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(PieChart, {\n            children: [/*#__PURE__*/_jsxDEV(Pie, {\n              data: getChartData('topics'),\n              dataKey: \"value\",\n              nameKey: \"topic\",\n              cx: \"50%\",\n              cy: \"50%\",\n              outerRadius: 100,\n              children: getChartData('topics').map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                fill: [\"#0088FE\", \"#00C49F\", \"#FFBB28\"][index % 3]\n              }, `cell-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Intensity vs Likelihood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"intensity\",\n              name: \"Intensity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"likelihood\",\n              name: \"Likelihood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              cursor: {\n                strokeDasharray: '3 3'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              name: \"Data Points\",\n              data: getChartData('scatter'),\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardApp, \"oeixYC2b9cf97vaNZHBhdCx9NmQ=\", false, function () {\n  return [useData];\n});\n_c2 = DashboardApp;\nexport default DashboardApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"Select\");\n$RefreshReg$(_c2, \"DashboardApp\");","map":{"version":3,"names":["React","useData","LineChart","Line","BarChart","Bar","PieChart","Pie","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Cell","jsxDEV","_jsxDEV","Select","label","options","value","onChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","e","target","map","option","_c","DashboardApp","_s","filters","setFilters","getChartData","isLoading","year","prev","width","height","data","strokeDasharray","dataKey","type","stroke","strokeWidth","fill","nameKey","cx","cy","outerRadius","entry","index","name","cursor","_c2","$RefreshReg$"],"sources":["C:/Users/hall_/Desktop/Bid/frontend/src/components/DashboardApp.js"],"sourcesContent":["/*import React from 'react';\r\nimport { useData } from '../services/DataContext'; // Import the custom context\r\nimport {\r\n  LineChart, Line, BarChart, Bar, PieChart, Pie, ScatterChart, Scatter,\r\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell\r\n} from 'recharts';\r\n\r\nconst Select = ({ label, options, value, onChange }) => (\r\n  <div className=\"mb-4\">\r\n    <label className=\"block text-sm font-medium text-gray-700 mb-1\">{label}</label>\r\n    <select value={value} onChange={(e) => onChange(e.target.value)} className=\"w-full border rounded p-2\">\r\n      <option value=\"all\">All {label}s</option>\r\n      {options.map((option) => (\r\n        <option key={option} value={option}>{option}</option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n);\r\n\r\nconst DashboardApp = () => {\r\n  const { data, filters, setFilters } = useData(); // Access data and filters from context\r\n\r\n  return (\r\n    <div className=\"p-8 bg-gray-100 min-h-screen\">\r\n      <h1 className=\"text-3xl font-bold mb-8\">Data Analysis Dashboard</h1>\r\n\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\r\n        <Select\r\n          label=\"Year\"\r\n          options={['2020', '2021', '2022']}\r\n          value={filters.year}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, year: value }))}\r\n        />\r\n        <Select\r\n          label=\"Topic\"\r\n          options={['AI', 'Healthcare', 'Climate']}\r\n          value={filters.topic}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, topic: value }))}\r\n        />\r\n        <Select\r\n          label=\"Region\"\r\n          options={['North America', 'Europe', 'Asia']}\r\n          value={filters.region}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, region: value }))}\r\n        />\r\n        <Select\r\n          label=\"PEST\"\r\n          options={['Social', 'Economic', 'Environmental']}\r\n          value={filters.pestle}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, pestle: value }))}\r\n        />\r\n        <Select\r\n          label=\"Source\"\r\n          options={['Report', 'Survey', 'Journal']}\r\n          value={filters.source}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, source: value }))}\r\n        />\r\n        <Select\r\n          label=\"SWOT\"\r\n          options={['Strength', 'Opportunity', 'Threat']}\r\n          value={filters.swot}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, swot: value }))}\r\n        />\r\n        <Select\r\n          label=\"Country\"\r\n          options={['USA', 'France', 'India']}\r\n          value={filters.country}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, country: value }))}\r\n        />\r\n        <Select\r\n          label=\"City\"\r\n          options={['New York', 'Paris', 'Delhi']}\r\n          value={filters.city}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, city: value }))}\r\n        />\r\n      </div>\r\n\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Intensity & Likelihood Trends</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"year\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"intensity\" stroke=\"#3b82f6\" strokeWidth={2} />\r\n              <Line type=\"monotone\" dataKey=\"likelihood\" stroke=\"#10b981\" strokeWidth={2} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Relevance by Region</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"region\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"relevance\" fill=\"#8b5cf6\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Topics Distribution</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n              <Pie data={data} dataKey=\"relevance\" nameKey=\"topic\" cx=\"50%\" cy=\"50%\" outerRadius={100}>\r\n                {data.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={[\"#0088FE\", \"#00C49F\", \"#FFBB28\"][index % 3]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n              <Legend />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Intensity vs Likelihood</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"intensity\" name=\"Intensity\" />\r\n              <YAxis dataKey=\"likelihood\" name=\"Likelihood\" />\r\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n              <Legend />\r\n              <Scatter name=\"Data Points\" data={data} fill=\"#8884d8\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardApp;\r\n*/\r\nimport React from 'react';\r\nimport { useData } from '../services/DataContext';\r\nimport {\r\n  LineChart, Line, BarChart, Bar, PieChart, Pie, ScatterChart, Scatter,\r\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell\r\n} from 'recharts';\r\n\r\nconst Select = ({ label, options, value, onChange }) => (\r\n  <div className=\"mb-4\">\r\n    <label className=\"block text-sm font-medium text-gray-700 mb-1\">{label}</label>\r\n    <select \r\n      value={value} \r\n      onChange={(e) => onChange(e.target.value)} \r\n      className=\"w-full border rounded p-2\"\r\n    >\r\n      <option value=\"all\">All {label}s</option>\r\n      {options.map((option) => (\r\n        <option key={option} value={option}>{option}</option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n);\r\n\r\nconst DashboardApp = () => {\r\n  const { filters, setFilters, getChartData, isLoading } = useData();\r\n\r\n  if (isLoading) {\r\n    return <div className=\"p-8\">Loading data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-8 bg-gray-100 min-h-screen\">\r\n      <h1 className=\"text-3xl font-bold mb-8\">Data Analysis Dashboard</h1>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\r\n        <Select\r\n          label=\"Year\"\r\n          options={['2020', '2021', '2022']}\r\n          value={filters.year}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, year: value }))}\r\n        />\r\n        {/* Other Select components remain the same */}\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Intensity & Likelihood Trends</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={getChartData('trends')}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"year\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"intensity\" stroke=\"#3b82f6\" strokeWidth={2} />\r\n              <Line type=\"monotone\" dataKey=\"likelihood\" stroke=\"#10b981\" strokeWidth={2} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Relevance by Region</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={getChartData('regions')}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"region\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"relevance\" fill=\"#8b5cf6\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Topics Distribution</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n              <Pie \r\n                data={getChartData('topics')} \r\n                dataKey=\"value\" \r\n                nameKey=\"topic\" \r\n                cx=\"50%\" \r\n                cy=\"50%\" \r\n                outerRadius={100}\r\n              >\r\n                {getChartData('topics').map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={[\"#0088FE\", \"#00C49F\", \"#FFBB28\"][index % 3]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n              <Legend />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Intensity vs Likelihood</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"intensity\" name=\"Intensity\" />\r\n              <YAxis dataKey=\"likelihood\" name=\"Likelihood\" />\r\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n              <Legend />\r\n              <Scatter name=\"Data Points\" data={getChartData('scatter')} fill=\"#8884d8\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardApp;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}