{"ast":null,"code":"/*import React from 'react';\r\nimport { useData } from '../services/DataContext'; // Import the custom context\r\nimport {\r\n  LineChart, Line, BarChart, Bar, PieChart, Pie, ScatterChart, Scatter,\r\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell\r\n} from 'recharts';\r\n\r\nconst Select = ({ label, options, value, onChange }) => (\r\n  <div className=\"mb-4\">\r\n    <label className=\"block text-sm font-medium text-gray-700 mb-1\">{label}</label>\r\n    <select value={value} onChange={(e) => onChange(e.target.value)} className=\"w-full border rounded p-2\">\r\n      <option value=\"all\">All {label}s</option>\r\n      {options.map((option) => (\r\n        <option key={option} value={option}>{option}</option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n);\r\n\r\nconst DashboardApp = () => {\r\n  const { data, filters, setFilters } = useData(); // Access data and filters from context\r\n\r\n  return (\r\n    <div className=\"p-8 bg-gray-100 min-h-screen\">\r\n      <h1 className=\"text-3xl font-bold mb-8\">Data Analysis Dashboard</h1>\r\n\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\r\n        <Select\r\n          label=\"Year\"\r\n          options={['2020', '2021', '2022']}\r\n          value={filters.year}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, year: value }))}\r\n        />\r\n        <Select\r\n          label=\"Topic\"\r\n          options={['AI', 'Healthcare', 'Climate']}\r\n          value={filters.topic}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, topic: value }))}\r\n        />\r\n        <Select\r\n          label=\"Region\"\r\n          options={['North America', 'Europe', 'Asia']}\r\n          value={filters.region}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, region: value }))}\r\n        />\r\n        <Select\r\n          label=\"PEST\"\r\n          options={['Social', 'Economic', 'Environmental']}\r\n          value={filters.pestle}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, pestle: value }))}\r\n        />\r\n        <Select\r\n          label=\"Source\"\r\n          options={['Report', 'Survey', 'Journal']}\r\n          value={filters.source}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, source: value }))}\r\n        />\r\n        <Select\r\n          label=\"SWOT\"\r\n          options={['Strength', 'Opportunity', 'Threat']}\r\n          value={filters.swot}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, swot: value }))}\r\n        />\r\n        <Select\r\n          label=\"Country\"\r\n          options={['USA', 'France', 'India']}\r\n          value={filters.country}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, country: value }))}\r\n        />\r\n        <Select\r\n          label=\"City\"\r\n          options={['New York', 'Paris', 'Delhi']}\r\n          value={filters.city}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, city: value }))}\r\n        />\r\n      </div>\r\n\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Intensity & Likelihood Trends</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"year\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"intensity\" stroke=\"#3b82f6\" strokeWidth={2} />\r\n              <Line type=\"monotone\" dataKey=\"likelihood\" stroke=\"#10b981\" strokeWidth={2} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Relevance by Region</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"region\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"relevance\" fill=\"#8b5cf6\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Topics Distribution</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n              <Pie data={data} dataKey=\"relevance\" nameKey=\"topic\" cx=\"50%\" cy=\"50%\" outerRadius={100}>\r\n                {data.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={[\"#0088FE\", \"#00C49F\", \"#FFBB28\"][index % 3]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n              <Legend />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Intensity vs Likelihood</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"intensity\" name=\"Intensity\" />\r\n              <YAxis dataKey=\"likelihood\" name=\"Likelihood\" />\r\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n              <Legend />\r\n              <Scatter name=\"Data Points\" data={data} fill=\"#8884d8\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardApp;*/","map":{"version":3,"names":[],"sources":["C:/Users/hall_/Desktop/Bid/frontend/src/components/DashboardApp.js"],"sourcesContent":["/*import React from 'react';\r\nimport { useData } from '../services/DataContext'; // Import the custom context\r\nimport {\r\n  LineChart, Line, BarChart, Bar, PieChart, Pie, ScatterChart, Scatter,\r\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell\r\n} from 'recharts';\r\n\r\nconst Select = ({ label, options, value, onChange }) => (\r\n  <div className=\"mb-4\">\r\n    <label className=\"block text-sm font-medium text-gray-700 mb-1\">{label}</label>\r\n    <select value={value} onChange={(e) => onChange(e.target.value)} className=\"w-full border rounded p-2\">\r\n      <option value=\"all\">All {label}s</option>\r\n      {options.map((option) => (\r\n        <option key={option} value={option}>{option}</option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n);\r\n\r\nconst DashboardApp = () => {\r\n  const { data, filters, setFilters } = useData(); // Access data and filters from context\r\n\r\n  return (\r\n    <div className=\"p-8 bg-gray-100 min-h-screen\">\r\n      <h1 className=\"text-3xl font-bold mb-8\">Data Analysis Dashboard</h1>\r\n\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\r\n        <Select\r\n          label=\"Year\"\r\n          options={['2020', '2021', '2022']}\r\n          value={filters.year}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, year: value }))}\r\n        />\r\n        <Select\r\n          label=\"Topic\"\r\n          options={['AI', 'Healthcare', 'Climate']}\r\n          value={filters.topic}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, topic: value }))}\r\n        />\r\n        <Select\r\n          label=\"Region\"\r\n          options={['North America', 'Europe', 'Asia']}\r\n          value={filters.region}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, region: value }))}\r\n        />\r\n        <Select\r\n          label=\"PEST\"\r\n          options={['Social', 'Economic', 'Environmental']}\r\n          value={filters.pestle}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, pestle: value }))}\r\n        />\r\n        <Select\r\n          label=\"Source\"\r\n          options={['Report', 'Survey', 'Journal']}\r\n          value={filters.source}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, source: value }))}\r\n        />\r\n        <Select\r\n          label=\"SWOT\"\r\n          options={['Strength', 'Opportunity', 'Threat']}\r\n          value={filters.swot}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, swot: value }))}\r\n        />\r\n        <Select\r\n          label=\"Country\"\r\n          options={['USA', 'France', 'India']}\r\n          value={filters.country}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, country: value }))}\r\n        />\r\n        <Select\r\n          label=\"City\"\r\n          options={['New York', 'Paris', 'Delhi']}\r\n          value={filters.city}\r\n          onChange={(value) => setFilters(prev => ({ ...prev, city: value }))}\r\n        />\r\n      </div>\r\n\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Intensity & Likelihood Trends</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"year\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"intensity\" stroke=\"#3b82f6\" strokeWidth={2} />\r\n              <Line type=\"monotone\" dataKey=\"likelihood\" stroke=\"#10b981\" strokeWidth={2} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Relevance by Region</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"region\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"relevance\" fill=\"#8b5cf6\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Topics Distribution</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n              <Pie data={data} dataKey=\"relevance\" nameKey=\"topic\" cx=\"50%\" cy=\"50%\" outerRadius={100}>\r\n                {data.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={[\"#0088FE\", \"#00C49F\", \"#FFBB28\"][index % 3]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n              <Legend />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        \r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Intensity vs Likelihood</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"intensity\" name=\"Intensity\" />\r\n              <YAxis dataKey=\"likelihood\" name=\"Likelihood\" />\r\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n              <Legend />\r\n              <Scatter name=\"Data Points\" data={data} fill=\"#8884d8\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardApp;*/\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}