{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hall_\\\\Desktop\\\\Bid\\\\frontend\\\\src\\\\components\\\\DashboardApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, RadialLinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport { Line, Bar, Pie, Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, RadialLinearScale, Title, Tooltip, Legend);\nconst DashboardApp = ({\n  data\n}) => {\n  _s();\n  const [filters, setFilters] = useState({\n    endYear: 'all',\n    topic: 'all',\n    sector: 'all',\n    region: 'all',\n    pest: 'all',\n    source: 'all',\n    swot: 'all',\n    country: 'all',\n    city: 'all'\n  });\n  const processedData = useMemo(() => {\n    return data.filter(item => {\n      return (filters.endYear === 'all' || item.end_year === filters.endYear) && (filters.topic === 'all' || item.topic === filters.topic) && (filters.sector === 'all' || item.sector === filters.sector) && (filters.region === 'all' || item.region === filters.region) && (filters.pest === 'all' || item.pestle === filters.pest) && (filters.source === 'all' || item.source === filters.source) && (filters.swot === 'all' || item.swot === filters.swot) && (filters.country === 'all' || item.country === filters.country) && (filters.city === 'all' || item.city === filters.city);\n    });\n  }, [data, filters]);\n  const filterOptions = useMemo(() => {\n    const options = {\n      endYear: [...new Set(data.map(item => item.end_year))].filter(Boolean).sort(),\n      topics: [...new Set(data.map(item => item.topic))].filter(Boolean).sort(),\n      regions: [...new Set(data.map(item => item.region))].filter(Boolean).sort(),\n      pest: [...new Set(data.map(item => item.pestle))].filter(Boolean).sort(),\n      sources: [...new Set(data.map(item => item.source))].filter(Boolean).sort(),\n      swot: [...new Set(data.map(item => item.swot))].filter(Boolean).sort(),\n      countries: [...new Set(data.map(item => item.country))].filter(Boolean).sort(),\n      cities: [...new Set(data.map(item => item.city || ''))].filter(Boolean).sort(),\n      sectors: [...new Set(data.map(item => item.sector))].filter(Boolean).sort()\n    };\n    return options;\n  }, [data]);\n  const handleFilterChange = (e, filterType) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: e.target.value\n    }));\n  };\n  const handleReset = () => {\n    setFilters({\n      endYear: 'all',\n      topic: 'all',\n      sector: 'all',\n      region: 'all',\n      pest: 'all',\n      source: 'all',\n      swot: 'all',\n      country: 'all',\n      city: 'all'\n    });\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    }\n  };\n  const chartData = useMemo(() => {\n    const regionCount = {};\n    const topicCount = {};\n    const yearlyMetrics = {};\n    const sectorData = {};\n    const countryData = {};\n    const cityData = {};\n    const swotData = {};\n    processedData.forEach(item => {\n      // Region counting\n      if (item.region) {\n        regionCount[item.region] = (regionCount[item.region] || 0) + 1;\n      }\n\n      // Topic counting\n      if (item.topic) {\n        topicCount[item.topic] = (topicCount[item.topic] || 0) + 1;\n      }\n\n      // Country counting\n      if (item.country) {\n        countryData[item.country] = (countryData[item.country] || 0) + 1;\n      }\n\n      // City counting\n      if (item.city) {\n        cityData[item.city] = (cityData[item.city] || 0) + 1;\n      }\n\n      // Sector counting\n      if (item.sector) {\n        sectorData[item.sector] = (sectorData[item.sector] || 0) + 1;\n      }\n\n      // SWOT counting\n      if (item.swot) {\n        swotData[item.swot] = (swotData[item.swot] || 0) + 1;\n      }\n\n      // Yearly metrics\n      if (item.end_year) {\n        if (!yearlyMetrics[item.end_year]) {\n          yearlyMetrics[item.end_year] = {\n            intensity: {\n              sum: 0,\n              count: 0\n            },\n            likelihood: {\n              sum: 0,\n              count: 0\n            },\n            relevance: {\n              sum: 0,\n              count: 0\n            }\n          };\n        }\n        if (item.intensity) {\n          yearlyMetrics[item.end_year].intensity.sum += item.intensity;\n          yearlyMetrics[item.end_year].intensity.count += 1;\n        }\n        if (item.likelihood) {\n          yearlyMetrics[item.end_year].likelihood.sum += item.likelihood;\n          yearlyMetrics[item.end_year].likelihood.count += 1;\n        }\n        if (item.relevance) {\n          yearlyMetrics[item.end_year].relevance.sum += item.relevance;\n          yearlyMetrics[item.end_year].relevance.count += 1;\n        }\n      }\n    });\n\n    // Calculate averages for yearly metrics\n    const years = Object.keys(yearlyMetrics).sort();\n    const yearlyData = {\n      intensity: years.map(year => yearlyMetrics[year].intensity.count > 0 ? yearlyMetrics[year].intensity.sum / yearlyMetrics[year].intensity.count : 0),\n      likelihood: years.map(year => yearlyMetrics[year].likelihood.count > 0 ? yearlyMetrics[year].likelihood.sum / yearlyMetrics[year].likelihood.count : 0),\n      relevance: years.map(year => yearlyMetrics[year].relevance.count > 0 ? yearlyMetrics[year].relevance.sum / yearlyMetrics[year].relevance.count : 0)\n    };\n    const topCities = Object.entries(cityData).sort((a, b) => b[1] - a[1]).slice(0, 10).map(([city]) => city);\n    return {\n      metricsOverTime: {\n        labels: years,\n        datasets: [{\n          label: 'Intensity',\n          data: yearlyData.intensity,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }, {\n          label: 'Likelihood',\n          data: yearlyData.likelihood,\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.1\n        }, {\n          label: 'Relevance',\n          data: yearlyData.relevance,\n          borderColor: 'rgb(153, 102, 255)',\n          tension: 0.1\n        }]\n      },\n      regionChart: {\n        labels: Object.keys(regionCount),\n        datasets: [{\n          data: Object.values(regionCount),\n          backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)']\n        }]\n      },\n      topicChart: {\n        labels: Object.keys(topicCount),\n        datasets: [{\n          label: 'Topics Distribution',\n          data: Object.values(topicCount),\n          backgroundColor: 'rgba(54, 162, 235, 0.8)'\n        }]\n      },\n      countryChart: {\n        labels: Object.entries(countryData).sort((a, b) => b[1] - a[1]).slice(0, 10).map(([country]) => country),\n        datasets: [{\n          label: 'Top 10 Countries',\n          data: Object.entries(countryData).sort((a, b) => b[1] - a[1]).slice(0, 10).map(([, count]) => count),\n          backgroundColor: 'rgba(153, 102, 255, 0.8)'\n        }]\n      },\n      cityChart: {\n        labels: topCities,\n        datasets: [{\n          label: 'Top 10 Cities',\n          data: topCities.map(city => cityData[city]),\n          backgroundColor: 'rgba(255, 159, 64, 0.8)'\n        }]\n      },\n      sectorChart: {\n        labels: Object.keys(sectorData),\n        datasets: [{\n          data: Object.values(sectorData),\n          backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)']\n        }]\n      },\n      swotChart: {\n        labels: Object.keys(swotData),\n        datasets: [{\n          label: 'SWOT Analysis',\n          data: Object.values(swotData),\n          backgroundColor: ['rgba(75, 192, 192, 0.8)', 'rgba(255, 99, 132, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(153, 102, 255, 0.8)']\n        }]\n      }\n    };\n  }, [processedData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-6 bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4 bg-white p-4 rounded-lg shadow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Metrics Over Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            options: options,\n            data: chartData.metricsOverTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Regional Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            options: options,\n            data: chartData.regionChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Topics Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: {\n              ...options,\n              indexAxis: 'y',\n              plugins: {\n                legend: {\n                  display: false\n                }\n              }\n            },\n            data: chartData.topicChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Top 10 Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: {\n              ...options,\n              plugins: {\n                legend: {\n                  display: false\n                }\n              }\n            },\n            data: chartData.countryChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Top 10 Cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: {\n              ...options,\n              plugins: {\n                legend: {\n                  display: false\n                }\n              }\n            },\n            data: chartData.cityChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Sector Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            options: options,\n            data: chartData.sectorChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"SWOT Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: {\n              ...options,\n              indexAxis: 'y',\n              plugins: {\n                legend: {\n                  display: false\n                }\n              }\n            },\n            data: chartData.swotChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardApp, \"n5D4sew41uHVNI2VZWxyM33793w=\");\n_c = DashboardApp;\nexport default DashboardApp;\nvar _c;\n$RefreshReg$(_c, \"DashboardApp\");","map":{"version":3,"names":["React","useState","useMemo","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","RadialLinearScale","Title","Tooltip","Legend","Line","Bar","Pie","Doughnut","jsxDEV","_jsxDEV","register","DashboardApp","data","_s","filters","setFilters","endYear","topic","sector","region","pest","source","swot","country","city","processedData","filter","item","end_year","pestle","filterOptions","options","Set","map","Boolean","sort","topics","regions","sources","countries","cities","sectors","handleFilterChange","e","filterType","prev","target","value","handleReset","responsive","maintainAspectRatio","plugins","legend","position","chartData","regionCount","topicCount","yearlyMetrics","sectorData","countryData","cityData","swotData","forEach","intensity","sum","count","likelihood","relevance","years","Object","keys","yearlyData","year","topCities","entries","a","b","slice","metricsOverTime","labels","datasets","label","borderColor","tension","regionChart","values","backgroundColor","topicChart","countryChart","cityChart","sectorChart","swotChart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","indexAxis","display","_c","$RefreshReg$"],"sources":["C:/Users/hall_/Desktop/Bid/frontend/src/components/DashboardApp.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, RadialLinearScale, Title, Tooltip, Legend } from 'chart.js';\r\nimport { Line, Bar, Pie, Doughnut } from 'react-chartjs-2';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, RadialLinearScale, Title, Tooltip, Legend);\r\n\r\nconst DashboardApp = ({ data }) => {\r\n  const [filters, setFilters] = useState({\r\n    endYear: 'all',\r\n    topic: 'all',\r\n    sector: 'all',\r\n    region: 'all',\r\n    pest: 'all',\r\n    source: 'all',\r\n    swot: 'all',\r\n    country: 'all',\r\n    city: 'all',\r\n  });\r\n\r\n  const processedData = useMemo(() => {\r\n    return data.filter(item => {\r\n      return (\r\n        (filters.endYear === 'all' || item.end_year === filters.endYear) &&\r\n        (filters.topic === 'all' || item.topic === filters.topic) &&\r\n        (filters.sector === 'all' || item.sector === filters.sector) &&\r\n        (filters.region === 'all' || item.region === filters.region) &&\r\n        (filters.pest === 'all' || item.pestle === filters.pest) &&\r\n        (filters.source === 'all' || item.source === filters.source) &&\r\n        (filters.swot === 'all' || item.swot === filters.swot) &&\r\n        (filters.country === 'all' || item.country === filters.country) &&\r\n        (filters.city === 'all' || item.city === filters.city)\r\n      );\r\n    });\r\n  }, [data, filters]);\r\n\r\n  const filterOptions = useMemo(() => {\r\n    const options = {\r\n      endYear: [...new Set(data.map(item => item.end_year))].filter(Boolean).sort(),\r\n      topics: [...new Set(data.map(item => item.topic))].filter(Boolean).sort(),\r\n      regions: [...new Set(data.map(item => item.region))].filter(Boolean).sort(),\r\n      pest: [...new Set(data.map(item => item.pestle))].filter(Boolean).sort(),\r\n      sources: [...new Set(data.map(item => item.source))].filter(Boolean).sort(),\r\n      swot: [...new Set(data.map(item => item.swot))].filter(Boolean).sort(),\r\n      countries: [...new Set(data.map(item => item.country))].filter(Boolean).sort(),\r\n      cities: [...new Set(data.map(item => item.city || ''))].filter(Boolean).sort(),\r\n      sectors: [...new Set(data.map(item => item.sector))].filter(Boolean).sort(),\r\n    };\r\n\r\n    return options;\r\n  }, [data]);\r\n\r\n  const handleFilterChange = (e, filterType) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [filterType]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFilters({\r\n      endYear: 'all',\r\n      topic: 'all',\r\n      sector: 'all',\r\n      region: 'all',\r\n      pest: 'all',\r\n      source: 'all',\r\n      swot: 'all',\r\n      country: 'all',\r\n      city: 'all',\r\n    });\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartData = useMemo(() => {\r\n    const regionCount = {};\r\n    const topicCount = {};\r\n    const yearlyMetrics = {};\r\n    const sectorData = {};\r\n    const countryData = {};\r\n    const cityData = {};\r\n    const swotData = {};\r\n\r\n    processedData.forEach(item => {\r\n      // Region counting\r\n      if (item.region) {\r\n        regionCount[item.region] = (regionCount[item.region] || 0) + 1;\r\n      }\r\n\r\n      // Topic counting\r\n      if (item.topic) {\r\n        topicCount[item.topic] = (topicCount[item.topic] || 0) + 1;\r\n      }\r\n\r\n      // Country counting\r\n      if (item.country) {\r\n        countryData[item.country] = (countryData[item.country] || 0) + 1;\r\n      }\r\n\r\n      // City counting\r\n      if (item.city) {\r\n        cityData[item.city] = (cityData[item.city] || 0) + 1;\r\n      }\r\n\r\n      // Sector counting\r\n      if (item.sector) {\r\n        sectorData[item.sector] = (sectorData[item.sector] || 0) + 1;\r\n      }\r\n\r\n      // SWOT counting\r\n      if (item.swot) {\r\n        swotData[item.swot] = (swotData[item.swot] || 0) + 1;\r\n      }\r\n\r\n      // Yearly metrics\r\n      if (item.end_year) {\r\n        if (!yearlyMetrics[item.end_year]) {\r\n          yearlyMetrics[item.end_year] = {\r\n            intensity: { sum: 0, count: 0 },\r\n            likelihood: { sum: 0, count: 0 },\r\n            relevance: { sum: 0, count: 0 },\r\n          };\r\n        }\r\n        if (item.intensity) {\r\n          yearlyMetrics[item.end_year].intensity.sum += item.intensity;\r\n          yearlyMetrics[item.end_year].intensity.count += 1;\r\n        }\r\n        if (item.likelihood) {\r\n          yearlyMetrics[item.end_year].likelihood.sum += item.likelihood;\r\n          yearlyMetrics[item.end_year].likelihood.count += 1;\r\n        }\r\n        if (item.relevance) {\r\n          yearlyMetrics[item.end_year].relevance.sum += item.relevance;\r\n          yearlyMetrics[item.end_year].relevance.count += 1;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Calculate averages for yearly metrics\r\n    const years = Object.keys(yearlyMetrics).sort();\r\n    const yearlyData = {\r\n      intensity: years.map(year =>\r\n        yearlyMetrics[year].intensity.count > 0\r\n          ? yearlyMetrics[year].intensity.sum / yearlyMetrics[year].intensity.count\r\n          : 0\r\n      ),\r\n      likelihood: years.map(year =>\r\n        yearlyMetrics[year].likelihood.count > 0\r\n          ? yearlyMetrics[year].likelihood.sum / yearlyMetrics[year].likelihood.count\r\n          : 0\r\n      ),\r\n      relevance: years.map(year =>\r\n        yearlyMetrics[year].relevance.count > 0\r\n          ? yearlyMetrics[year].relevance.sum / yearlyMetrics[year].relevance.count\r\n          : 0\r\n      ),\r\n    };\r\n\r\n    const topCities = Object.entries(cityData)\r\n      .sort((a, b) => b[1] - a[1])\r\n      .slice(0, 10)\r\n      .map(([city]) => city);\r\n\r\n    return {\r\n      metricsOverTime: {\r\n        labels: years,\r\n        datasets: [\r\n          {\r\n            label: 'Intensity',\r\n            data: yearlyData.intensity,\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            tension: 0.1,\r\n          },\r\n          {\r\n            label: 'Likelihood',\r\n            data: yearlyData.likelihood,\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            tension: 0.1,\r\n          },\r\n          {\r\n            label: 'Relevance',\r\n            data: yearlyData.relevance,\r\n            borderColor: 'rgb(153, 102, 255)',\r\n            tension: 0.1,\r\n          },\r\n        ],\r\n      },\r\n      regionChart: {\r\n        labels: Object.keys(regionCount),\r\n        datasets: [\r\n          {\r\n            data: Object.values(regionCount),\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.8)',\r\n              'rgba(54, 162, 235, 0.8)',\r\n              'rgba(255, 206, 86, 0.8)',\r\n              'rgba(75, 192, 192, 0.8)',\r\n              'rgba(153, 102, 255, 0.8)',\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      topicChart: {\r\n        labels: Object.keys(topicCount),\r\n        datasets: [\r\n          {\r\n            label: 'Topics Distribution',\r\n            data: Object.values(topicCount),\r\n            backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n          },\r\n        ],\r\n      },\r\n      countryChart: {\r\n        labels: Object.entries(countryData)\r\n          .sort((a, b) => b[1] - a[1])\r\n          .slice(0, 10)\r\n          .map(([country]) => country),\r\n        datasets: [\r\n          {\r\n            label: 'Top 10 Countries',\r\n            data: Object.entries(countryData)\r\n              .sort((a, b) => b[1] - a[1])\r\n              .slice(0, 10)\r\n              .map(([, count]) => count),\r\n            backgroundColor: 'rgba(153, 102, 255, 0.8)',\r\n          },\r\n        ],\r\n      },\r\n      cityChart: {\r\n        labels: topCities,\r\n        datasets: [\r\n          {\r\n            label: 'Top 10 Cities',\r\n            data: topCities.map(city => cityData[city]),\r\n            backgroundColor: 'rgba(255, 159, 64, 0.8)',\r\n          },\r\n        ],\r\n      },\r\n      sectorChart: {\r\n        labels: Object.keys(sectorData),\r\n        datasets: [\r\n          {\r\n            data: Object.values(sectorData),\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.8)',\r\n              'rgba(54, 162, 235, 0.8)',\r\n              'rgba(255, 206, 86, 0.8)',\r\n              'rgba(75, 192, 192, 0.8)',\r\n              'rgba(153, 102, 255, 0.8)',\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      swotChart: {\r\n        labels: Object.keys(swotData),\r\n        datasets: [\r\n          {\r\n            label: 'SWOT Analysis',\r\n            data: Object.values(swotData),\r\n            backgroundColor: [\r\n              'rgba(75, 192, 192, 0.8)',\r\n              'rgba(255, 99, 132, 0.8)',\r\n              'rgba(255, 206, 86, 0.8)',\r\n              'rgba(153, 102, 255, 0.8)',\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }, [processedData]);\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6 bg-gray-50\">\r\n      {/* Filters Section */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4 bg-white p-4 rounded-lg shadow\">\r\n        {/* Filter dropdowns */}\r\n        {/* ... (existing filter dropdowns) */}\r\n      </div>\r\n\r\n      {/* Charts Section */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Metrics Over Time */}\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Metrics Over Time</h2>\r\n          <div className=\"h-80\">\r\n            <Line options={options} data={chartData.metricsOverTime} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Regional Distribution */}\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Regional Distribution</h2>\r\n          <div className=\"h-80\">\r\n            <Doughnut options={options} data={chartData.regionChart} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Topics Distribution */}\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Topics Distribution</h2>\r\n          <div className=\"h-80\">\r\n            <Bar\r\n              options={{\r\n                ...options,\r\n                indexAxis: 'y',\r\n                plugins: {\r\n                  legend: { display: false },\r\n                },\r\n              }}\r\n              data={chartData.topicChart}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Top 10 Countries */}\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Top 10 Countries</h2>\r\n          <div className=\"h-80\">\r\n            <Bar\r\n              options={{\r\n                ...options,\r\n                plugins: {\r\n                  legend: { display: false },\r\n                },\r\n              }}\r\n              data={chartData.countryChart}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Top 10 Cities */}\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Top 10 Cities</h2>\r\n          <div className=\"h-80\">\r\n            <Bar\r\n              options={{\r\n                ...options,\r\n                plugins: {\r\n                  legend: { display: false },\r\n                },\r\n              }}\r\n              data={chartData.cityChart}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Sector Distribution */}\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Sector Distribution</h2>\r\n          <div className=\"h-80\">\r\n            <Pie options={options} data={chartData.sectorChart} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* SWOT Analysis */}\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">SWOT Analysis</h2>\r\n          <div className=\"h-80\">\r\n            <Bar\r\n              options={{\r\n                ...options,\r\n                indexAxis: 'y',\r\n                plugins: {\r\n                  legend: { display: false },\r\n                },\r\n              }}\r\n              data={chartData.swotChart}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}