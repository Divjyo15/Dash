{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hall_\\\\Desktop\\\\Bid\\\\frontend\\\\src\\\\components\\\\DashboardApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { useData } from '../services/DataContext';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend, RadialLinearScale } from 'chart.js';\nimport { Line, Bar, Pie, Doughnut, Radar } from 'react-chartjs-2';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, RadialLinearScale, Title, Tooltip, Legend);\nconst DashboardApp = () => {\n  _s();\n  const {\n    data,\n    filters,\n    setFilters\n  } = useData();\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    }\n  };\n\n  // Enhanced data aggregation\n  const chartData = useMemo(() => {\n    const regionCount = {};\n    const topicCount = {};\n    const yearlyMetrics = {};\n    const sectorData = {};\n    const countryData = {};\n    const cityData = {};\n    const likelihoodByTopic = {};\n    const relevanceByRegion = {};\n    data.forEach(item => {\n      if (item.region) regionCount[item.region] = (regionCount[item.region] || 0) + 1;\n      if (item.topic) topicCount[item.topic] = (topicCount[item.topic] || 0) + 1;\n      if (item.country) countryData[item.country] = (countryData[item.country] || 0) + 1;\n      if (item.city) cityData[item.city] = (cityData[item.city] || 0) + 1;\n      if (item.sector) sectorData[item.sector] = (sectorData[item.sector] || 0) + 1;\n      if (item.year) {\n        if (!yearlyMetrics[item.year]) {\n          yearlyMetrics[item.year] = {\n            intensity: {\n              sum: 0,\n              count: 0\n            },\n            likelihood: {\n              sum: 0,\n              count: 0\n            },\n            relevance: {\n              sum: 0,\n              count: 0\n            }\n          };\n        }\n        if (item.intensity) {\n          yearlyMetrics[item.year].intensity.sum += item.intensity;\n          yearlyMetrics[item.year].intensity.count += 1;\n        }\n        if (item.likelihood) {\n          yearlyMetrics[item.year].likelihood.sum += item.likelihood;\n          yearlyMetrics[item.year].likelihood.count += 1;\n        }\n        if (item.relevance) {\n          yearlyMetrics[item.year].relevance.sum += item.relevance;\n          yearlyMetrics[item.year].relevance.count += 1;\n        }\n      }\n      if (item.topic && item.likelihood) {\n        if (!likelihoodByTopic[item.topic]) {\n          likelihoodByTopic[item.topic] = {\n            sum: 0,\n            count: 0\n          };\n        }\n        likelihoodByTopic[item.topic].sum += item.likelihood;\n        likelihoodByTopic[item.topic].count += 1;\n      }\n      if (item.region && item.relevance) {\n        if (!relevanceByRegion[item.region]) {\n          relevanceByRegion[item.region] = {\n            sum: 0,\n            count: 0\n          };\n        }\n        relevanceByRegion[item.region].sum += item.relevance;\n        relevanceByRegion[item.region].count += 1;\n      }\n    });\n\n    // Calculate averages\n    const years = Object.keys(yearlyMetrics);\n    const yearlyData = {\n      intensity: years.map(year => yearlyMetrics[year].intensity.sum / yearlyMetrics[year].intensity.count),\n      likelihood: years.map(year => yearlyMetrics[year].likelihood.sum / yearlyMetrics[year].likelihood.count),\n      relevance: years.map(year => yearlyMetrics[year].relevance.sum / yearlyMetrics[year].relevance.count)\n    };\n    return {\n      metricsOverTime: {\n        labels: years,\n        datasets: [{\n          label: 'Intensity',\n          data: yearlyData.intensity,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }, {\n          label: 'Likelihood',\n          data: yearlyData.likelihood,\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.1\n        }, {\n          label: 'Relevance',\n          data: yearlyData.relevance,\n          borderColor: 'rgb(153, 102, 255)',\n          tension: 0.1\n        }]\n      },\n      regionChart: {\n        labels: Object.keys(regionCount),\n        datasets: [{\n          data: Object.values(regionCount),\n          backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)']\n        }]\n      },\n      topicChart: {\n        labels: Object.keys(topicCount),\n        datasets: [{\n          label: 'Topics Distribution',\n          data: Object.values(topicCount),\n          backgroundColor: 'rgba(54, 162, 235, 0.8)'\n        }]\n      },\n      countryChart: {\n        labels: Object.keys(countryData).slice(0, 10),\n        datasets: [{\n          label: 'Top 10 Countries',\n          data: Object.values(countryData).slice(0, 10),\n          backgroundColor: 'rgba(153, 102, 255, 0.8)'\n        }]\n      },\n      cityChart: {\n        labels: Object.keys(cityData).slice(0, 10),\n        datasets: [{\n          label: 'Top 10 Cities',\n          data: Object.values(cityData).slice(0, 10),\n          backgroundColor: 'rgba(255, 159, 64, 0.8)'\n        }]\n      },\n      sectorChart: {\n        labels: Object.keys(sectorData),\n        datasets: [{\n          data: Object.values(sectorData),\n          backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)']\n        }]\n      }\n    };\n  }, [data]);\n\n  // Enhanced filter options\n  const filterOptions = useMemo(() => ({\n    startYear: [...new Set(data.map(item => item.start_year))].filter(Boolean).sort(),\n    endYear: [...new Set(data.map(item => item.end_year))].filter(Boolean).sort(),\n    topics: [...new Set(data.map(item => item.topic))].filter(Boolean).sort(),\n    regions: [...new Set(data.map(item => item.region))].filter(Boolean).sort(),\n    pest: [...new Set(data.map(item => item.pestle))].filter(Boolean).sort(),\n    sources: [...new Set(data.map(item => item.source))].filter(Boolean).sort(),\n    swot: [...new Set(data.map(item => item.swot))].filter(Boolean).sort(),\n    countries: [...new Set(data.map(item => item.country))].filter(Boolean).sort(),\n    cities: [...new Set(data.map(item => item.city))].filter(Boolean).sort(),\n    sectors: [...new Set(data.map(item => item.sector))].filter(Boolean).sort()\n  }), [data]);\n  const handleFilterChange = (e, filterType) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: e.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.endYear,\n        onChange: e => handleFilterChange(e, 'endYear'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"End Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), filterOptions.endYear.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.topic,\n        onChange: e => handleFilterChange(e, 'topic'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), filterOptions.topics.map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topic,\n          children: topic\n        }, topic, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.sector,\n        onChange: e => handleFilterChange(e, 'sector'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Sectors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), filterOptions.sectors.map(sector => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: sector,\n          children: sector\n        }, sector, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.region,\n        onChange: e => handleFilterChange(e, 'region'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Regions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), filterOptions.regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: region,\n          children: region\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.pest,\n        onChange: e => handleFilterChange(e, 'pest'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All PEST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), filterOptions.pest.map(pest => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pest,\n          children: pest\n        }, pest, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.source,\n        onChange: e => handleFilterChange(e, 'source'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Sources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), filterOptions.sources.map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: source,\n          children: source\n        }, source, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.swot,\n        onChange: e => handleFilterChange(e, 'swot'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All SWOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), filterOptions.swot.map(swot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: swot,\n          children: swot\n        }, swot, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.country,\n        onChange: e => handleFilterChange(e, 'country'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), filterOptions.countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.city,\n        onChange: e => handleFilterChange(e, 'city'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), filterOptions.cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Metrics Over Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            options: options,\n            data: chartData.metricsOverTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Regional Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            options: options,\n            data: chartData.regionChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Topics Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: {\n              ...options,\n              indexAxis: 'y',\n              plugins: {\n                legend: {\n                  display: false\n                }\n              }\n            },\n            data: chartData.topicChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Top 10 Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: {\n              ...options,\n              plugins: {\n                legend: {\n                  display: false\n                }\n              }\n            },\n            data: chartData.countryChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Top 10 Cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: {\n              ...options,\n              plugins: {\n                legend: {\n                  display: false\n                }\n              }\n            },\n            data: chartData.cityChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Sector Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            options: options,\n            data: chartData.sectorChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardApp, \"VbmGElYUxToC5GIdaRz/DlsvoCI=\", false, function () {\n  return [useData];\n});\n_c = DashboardApp;\nexport default DashboardApp;\nvar _c;\n$RefreshReg$(_c, \"DashboardApp\");","map":{"version":3,"names":["React","useState","useMemo","useData","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","RadialLinearScale","Line","Bar","Pie","Doughnut","Radar","jsxDEV","_jsxDEV","register","DashboardApp","_s","data","filters","setFilters","options","responsive","maintainAspectRatio","plugins","legend","position","chartData","regionCount","topicCount","yearlyMetrics","sectorData","countryData","cityData","likelihoodByTopic","relevanceByRegion","forEach","item","region","topic","country","city","sector","year","intensity","sum","count","likelihood","relevance","years","Object","keys","yearlyData","map","metricsOverTime","labels","datasets","label","borderColor","tension","regionChart","values","backgroundColor","topicChart","countryChart","slice","cityChart","sectorChart","filterOptions","startYear","Set","start_year","filter","Boolean","sort","endYear","end_year","topics","regions","pest","pestle","sources","source","swot","countries","cities","sectors","handleFilterChange","e","filterType","prev","target","value","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","indexAxis","display","_c","$RefreshReg$"],"sources":["C:/Users/hall_/Desktop/Bid/frontend/src/components/DashboardApp.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { useData } from '../services/DataContext';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  RadialLinearScale,\r\n} from 'chart.js';\r\nimport { Line, Bar, Pie, Doughnut, Radar } from 'react-chartjs-2';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  RadialLinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst DashboardApp = () => {\r\n  const { data, filters, setFilters } = useData();\r\n  \r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n\r\n  // Enhanced data aggregation\r\n  const chartData = useMemo(() => {\r\n    const regionCount = {};\r\n    const topicCount = {};\r\n    const yearlyMetrics = {};\r\n    const sectorData = {};\r\n    const countryData = {};\r\n    const cityData = {};\r\n    const likelihoodByTopic = {};\r\n    const relevanceByRegion = {};\r\n\r\n    data.forEach(item => {\r\n      if (item.region) regionCount[item.region] = (regionCount[item.region] || 0) + 1;\r\n      if (item.topic) topicCount[item.topic] = (topicCount[item.topic] || 0) + 1;\r\n      if (item.country) countryData[item.country] = (countryData[item.country] || 0) + 1;\r\n      if (item.city) cityData[item.city] = (cityData[item.city] || 0) + 1;\r\n      if (item.sector) sectorData[item.sector] = (sectorData[item.sector] || 0) + 1;\r\n      \r\n      if (item.year) {\r\n        if (!yearlyMetrics[item.year]) {\r\n          yearlyMetrics[item.year] = {\r\n            intensity: { sum: 0, count: 0 },\r\n            likelihood: { sum: 0, count: 0 },\r\n            relevance: { sum: 0, count: 0 }\r\n          };\r\n        }\r\n        if (item.intensity) {\r\n          yearlyMetrics[item.year].intensity.sum += item.intensity;\r\n          yearlyMetrics[item.year].intensity.count += 1;\r\n        }\r\n        if (item.likelihood) {\r\n          yearlyMetrics[item.year].likelihood.sum += item.likelihood;\r\n          yearlyMetrics[item.year].likelihood.count += 1;\r\n        }\r\n        if (item.relevance) {\r\n          yearlyMetrics[item.year].relevance.sum += item.relevance;\r\n          yearlyMetrics[item.year].relevance.count += 1;\r\n        }\r\n      }\r\n\r\n      if (item.topic && item.likelihood) {\r\n        if (!likelihoodByTopic[item.topic]) {\r\n          likelihoodByTopic[item.topic] = { sum: 0, count: 0 };\r\n        }\r\n        likelihoodByTopic[item.topic].sum += item.likelihood;\r\n        likelihoodByTopic[item.topic].count += 1;\r\n      }\r\n\r\n      if (item.region && item.relevance) {\r\n        if (!relevanceByRegion[item.region]) {\r\n          relevanceByRegion[item.region] = { sum: 0, count: 0 };\r\n        }\r\n        relevanceByRegion[item.region].sum += item.relevance;\r\n        relevanceByRegion[item.region].count += 1;\r\n      }\r\n    });\r\n\r\n    // Calculate averages\r\n    const years = Object.keys(yearlyMetrics);\r\n    const yearlyData = {\r\n      intensity: years.map(year => yearlyMetrics[year].intensity.sum / yearlyMetrics[year].intensity.count),\r\n      likelihood: years.map(year => yearlyMetrics[year].likelihood.sum / yearlyMetrics[year].likelihood.count),\r\n      relevance: years.map(year => yearlyMetrics[year].relevance.sum / yearlyMetrics[year].relevance.count)\r\n    };\r\n\r\n    return {\r\n      metricsOverTime: {\r\n        labels: years,\r\n        datasets: [\r\n          {\r\n            label: 'Intensity',\r\n            data: yearlyData.intensity,\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            tension: 0.1,\r\n          },\r\n          {\r\n            label: 'Likelihood',\r\n            data: yearlyData.likelihood,\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            tension: 0.1,\r\n          },\r\n          {\r\n            label: 'Relevance',\r\n            data: yearlyData.relevance,\r\n            borderColor: 'rgb(153, 102, 255)',\r\n            tension: 0.1,\r\n          }\r\n        ],\r\n      },\r\n      regionChart: {\r\n        labels: Object.keys(regionCount),\r\n        datasets: [{\r\n          data: Object.values(regionCount),\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.8)',\r\n            'rgba(54, 162, 235, 0.8)',\r\n            'rgba(255, 206, 86, 0.8)',\r\n            'rgba(75, 192, 192, 0.8)',\r\n            'rgba(153, 102, 255, 0.8)',\r\n          ],\r\n        }],\r\n      },\r\n      topicChart: {\r\n        labels: Object.keys(topicCount),\r\n        datasets: [{\r\n          label: 'Topics Distribution',\r\n          data: Object.values(topicCount),\r\n          backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n        }],\r\n      },\r\n      countryChart: {\r\n        labels: Object.keys(countryData).slice(0, 10),\r\n        datasets: [{\r\n          label: 'Top 10 Countries',\r\n          data: Object.values(countryData).slice(0, 10),\r\n          backgroundColor: 'rgba(153, 102, 255, 0.8)',\r\n        }],\r\n      },\r\n      cityChart: {\r\n        labels: Object.keys(cityData).slice(0, 10),\r\n        datasets: [{\r\n          label: 'Top 10 Cities',\r\n          data: Object.values(cityData).slice(0, 10),\r\n          backgroundColor: 'rgba(255, 159, 64, 0.8)',\r\n        }],\r\n      },\r\n      sectorChart: {\r\n        labels: Object.keys(sectorData),\r\n        datasets: [{\r\n          data: Object.values(sectorData),\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.8)',\r\n            'rgba(54, 162, 235, 0.8)',\r\n            'rgba(255, 206, 86, 0.8)',\r\n            'rgba(75, 192, 192, 0.8)',\r\n            'rgba(153, 102, 255, 0.8)',\r\n          ],\r\n        }],\r\n      },\r\n    };\r\n  }, [data]);\r\n\r\n  // Enhanced filter options\r\n  const filterOptions = useMemo(() => ({\r\n    startYear: [...new Set(data.map(item => item.start_year))].filter(Boolean).sort(),\r\n    endYear: [...new Set(data.map(item => item.end_year))].filter(Boolean).sort(),\r\n    topics: [...new Set(data.map(item => item.topic))].filter(Boolean).sort(),\r\n    regions: [...new Set(data.map(item => item.region))].filter(Boolean).sort(),\r\n    pest: [...new Set(data.map(item => item.pestle))].filter(Boolean).sort(),\r\n    sources: [...new Set(data.map(item => item.source))].filter(Boolean).sort(),\r\n    swot: [...new Set(data.map(item => item.swot))].filter(Boolean).sort(),\r\n    countries: [...new Set(data.map(item => item.country))].filter(Boolean).sort(),\r\n    cities: [...new Set(data.map(item => item.city))].filter(Boolean).sort(),\r\n    sectors: [...new Set(data.map(item => item.sector))].filter(Boolean).sort(),\r\n  }), [data]);\r\n\r\n  const handleFilterChange = (e, filterType) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [filterType]: e.target.value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      {/* Enhanced Filters Section */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        \r\n\r\n        <select\r\n          className=\"p-2 border rounded\"\r\n          value={filters.endYear}\r\n          onChange={(e) => handleFilterChange(e, 'endYear')}\r\n        >\r\n          <option value=\"all\">End Year</option>\r\n          {filterOptions.endYear.map(year => (\r\n            <option key={year} value={year}>{year}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          className=\"p-2 border rounded\"\r\n          value={filters.topic}\r\n          onChange={(e) => handleFilterChange(e, 'topic')}\r\n        >\r\n          <option value=\"all\">All Topics</option>\r\n          {filterOptions.topics.map(topic => (\r\n            <option key={topic} value={topic}>{topic}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          className=\"p-2 border rounded\"\r\n          value={filters.sector}\r\n          onChange={(e) => handleFilterChange(e, 'sector')}\r\n        >\r\n          <option value=\"all\">All Sectors</option>\r\n          {filterOptions.sectors.map(sector => (\r\n            <option key={sector} value={sector}>{sector}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          className=\"p-2 border rounded\"\r\n          value={filters.region}\r\n          onChange={(e) => handleFilterChange(e, 'region')}\r\n        >\r\n          <option value=\"all\">All Regions</option>\r\n          {filterOptions.regions.map(region => (\r\n            <option key={region} value={region}>{region}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          className=\"p-2 border rounded\"\r\n          value={filters.pest}\r\n          onChange={(e) => handleFilterChange(e, 'pest')}\r\n        >\r\n          <option value=\"all\">All PEST</option>\r\n          {filterOptions.pest.map(pest => (\r\n            <option key={pest} value={pest}>{pest}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          className=\"p-2 border rounded\"\r\n          value={filters.source}\r\n          onChange={(e) => handleFilterChange(e, 'source')}\r\n        >\r\n          <option value=\"all\">All Sources</option>\r\n          {filterOptions.sources.map(source => (\r\n            <option key={source} value={source}>{source}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          className=\"p-2 border rounded\"\r\n          value={filters.swot}\r\n          onChange={(e) => handleFilterChange(e, 'swot')}\r\n        >\r\n          <option value=\"all\">All SWOT</option>\r\n          {filterOptions.swot.map(swot => (\r\n            <option key={swot} value={swot}>{swot}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          className=\"p-2 border rounded\"\r\n          value={filters.country}\r\n          onChange={(e) => handleFilterChange(e, 'country')}\r\n        >\r\n          <option value=\"all\">All Countries</option>\r\n          {filterOptions.countries.map(country => (\r\n            <option key={country} value={country}>{country}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          className=\"p-2 border rounded\"\r\n          value={filters.city}\r\n          onChange={(e) => handleFilterChange(e, 'city')}\r\n        >\r\n          <option value=\"all\">All Cities</option>\r\n          {filterOptions.cities.map(city => (\r\n            <option key={city} value={city}>{city}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Enhanced Charts Section */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Metrics Over Time</h2>\r\n          <div className=\"h-80\">\r\n            <Line options={options} data={chartData.metricsOverTime} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Regional Distribution</h2>\r\n          <div className=\"h-80\">\r\n            <Doughnut options={options} data={chartData.regionChart} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Topics Distribution</h2>\r\n          <div className=\"h-80\">\r\n            <Bar \r\n              options={{\r\n                ...options,\r\n                indexAxis: 'y',\r\n                plugins: {\r\n                  legend: { display: false }\r\n                }\r\n              }} \r\n              data={chartData.topicChart} \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Top 10 Countries</h2>\r\n          <div className=\"h-80\">\r\n            <Bar \r\n              options={{\r\n                ...options,\r\n                plugins: {\r\n                  legend: { display: false }\r\n                }\r\n              }} \r\n              data={chartData.countryChart} \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Top 10 Cities</h2>\r\n          <div className=\"h-80\">\r\n            <Bar \r\n              options={{\r\n                ...options,\r\n                plugins: {\r\n                  legend: { display: false }\r\n                }\r\n              }} \r\n              data={chartData.cityChart} \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Sector Distribution</h2>\r\n          <div className=\"h-80\">\r\n            <Pie options={options} data={chartData.sectorChart} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}