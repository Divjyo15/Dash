{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hall_\\\\Desktop\\\\Bid\\\\frontend\\\\src\\\\components\\\\DashboardApp.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Chart } from \"chart.js\";\nimport { DataContext } from \"..//DataContext\"; // Assuming your context is named DataContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardApp = () => {\n  _s();\n  const {\n    data\n  } = useContext(DataContext); // Accessing data from DataContext\n  const [filteredData, setFilteredData] = useState(data);\n  const [filters, setFilters] = useState({\n    intensity: \"\",\n    likelihood: \"\",\n    relevance: \"\"\n  });\n  useEffect(() => {\n    // Filter the data based on selected filters\n    const filtered = data.filter(item => {\n      return (filters.intensity ? item.intensity === filters.intensity : true) && (filters.likelihood ? item.likelihood === filters.likelihood : true) && (filters.relevance ? item.relevance === filters.relevance : true);\n    });\n    setFilteredData(filtered);\n  }, [filters, data]);\n  useEffect(() => {\n    if (filteredData.length > 0) {\n      const chartData = getChartData(filteredData);\n      renderChart(chartData);\n    }\n  }, [filteredData]);\n  const getChartData = filteredData => {\n    const labels = [...new Set(filteredData.map(item => item.year))];\n    const datasets = [{\n      label: \"Intensity\",\n      data: labels.map(label => filteredData.filter(item => item.year === label).reduce((acc, curr) => acc + curr.intensity, 0) / filteredData.filter(item => item.year === label).length),\n      borderColor: \"rgba(75, 192, 192, 1)\",\n      fill: false\n    }, {\n      label: \"Likelihood\",\n      data: labels.map(label => filteredData.filter(item => item.year === label).reduce((acc, curr) => acc + curr.likelihood, 0) / filteredData.filter(item => item.year === label).length),\n      borderColor: \"rgba(153, 102, 255, 1)\",\n      fill: false\n    }, {\n      label: \"Relevance\",\n      data: labels.map(label => filteredData.filter(item => item.year === label).reduce((acc, curr) => acc + curr.relevance, 0) / filteredData.filter(item => item.year === label).length),\n      borderColor: \"rgba(255, 159, 64, 1)\",\n      fill: false\n    }];\n    return {\n      labels,\n      datasets\n    };\n  };\n  const renderChart = chartData => {\n    const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n    new Chart(ctx, {\n      type: \"line\",\n      data: chartData,\n      options: {\n        responsive: true,\n        scales: {\n          x: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  const handleFilterChange = e => {\n    setFilters({\n      ...filters,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"intensity\",\n        value: filters.intensity,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Intensity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), [...new Set(data.map(item => item.intensity))].map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value,\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"likelihood\",\n        value: filters.likelihood,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Likelihood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), [...new Set(data.map(item => item.likelihood))].map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value,\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"relevance\",\n        value: filters.relevance,\n        onChange: handleFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Relevance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), [...new Set(data.map(item => item.relevance))].map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value,\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      width: \"400\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardApp, \"1Y30DAdOfer4AZYs6ZwNIw5Udp0=\");\n_c = DashboardApp;\nexport default DashboardApp;\nvar _c;\n$RefreshReg$(_c, \"DashboardApp\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Chart","DataContext","jsxDEV","_jsxDEV","DashboardApp","_s","data","filteredData","setFilteredData","filters","setFilters","intensity","likelihood","relevance","filtered","filter","item","length","chartData","getChartData","renderChart","labels","Set","map","year","datasets","label","reduce","acc","curr","borderColor","fill","ctx","document","getElementById","getContext","type","options","responsive","scales","x","beginAtZero","handleFilterChange","e","target","name","value","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height","_c","$RefreshReg$"],"sources":["C:/Users/hall_/Desktop/Bid/frontend/src/components/DashboardApp.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport { DataContext } from \"..//DataContext\";  // Assuming your context is named DataContext\r\n\r\nconst DashboardApp = () => {\r\n  const { data } = useContext(DataContext); // Accessing data from DataContext\r\n  const [filteredData, setFilteredData] = useState(data);\r\n  const [filters, setFilters] = useState({\r\n    intensity: \"\",\r\n    likelihood: \"\",\r\n    relevance: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Filter the data based on selected filters\r\n    const filtered = data.filter((item) => {\r\n      return (\r\n        (filters.intensity ? item.intensity === filters.intensity : true) &&\r\n        (filters.likelihood ? item.likelihood === filters.likelihood : true) &&\r\n        (filters.relevance ? item.relevance === filters.relevance : true)\r\n      );\r\n    });\r\n    setFilteredData(filtered);\r\n  }, [filters, data]);\r\n\r\n  useEffect(() => {\r\n    if (filteredData.length > 0) {\r\n      const chartData = getChartData(filteredData);\r\n      renderChart(chartData);\r\n    }\r\n  }, [filteredData]);\r\n\r\n  const getChartData = (filteredData) => {\r\n    const labels = [...new Set(filteredData.map((item) => item.year))];\r\n    const datasets = [\r\n      {\r\n        label: \"Intensity\",\r\n        data: labels.map(\r\n          (label) =>\r\n            filteredData\r\n              .filter((item) => item.year === label)\r\n              .reduce((acc, curr) => acc + curr.intensity, 0) /\r\n            filteredData.filter((item) => item.year === label).length\r\n        ),\r\n        borderColor: \"rgba(75, 192, 192, 1)\",\r\n        fill: false,\r\n      },\r\n      {\r\n        label: \"Likelihood\",\r\n        data: labels.map(\r\n          (label) =>\r\n            filteredData\r\n              .filter((item) => item.year === label)\r\n              .reduce((acc, curr) => acc + curr.likelihood, 0) /\r\n            filteredData.filter((item) => item.year === label).length\r\n        ),\r\n        borderColor: \"rgba(153, 102, 255, 1)\",\r\n        fill: false,\r\n      },\r\n      {\r\n        label: \"Relevance\",\r\n        data: labels.map(\r\n          (label) =>\r\n            filteredData\r\n              .filter((item) => item.year === label)\r\n              .reduce((acc, curr) => acc + curr.relevance, 0) /\r\n            filteredData.filter((item) => item.year === label).length\r\n        ),\r\n        borderColor: \"rgba(255, 159, 64, 1)\",\r\n        fill: false,\r\n      },\r\n    ];\r\n    return { labels, datasets };\r\n  };\r\n\r\n  const renderChart = (chartData) => {\r\n    const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\r\n    new Chart(ctx, {\r\n      type: \"line\",\r\n      data: chartData,\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          x: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters({\r\n      ...filters,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"filters\">\r\n        <select\r\n          name=\"intensity\"\r\n          value={filters.intensity}\r\n          onChange={handleFilterChange}\r\n        >\r\n          <option value=\"\">Select Intensity</option>\r\n          {[...new Set(data.map((item) => item.intensity))].map((value) => (\r\n            <option key={value} value={value}>\r\n              {value}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          name=\"likelihood\"\r\n          value={filters.likelihood}\r\n          onChange={handleFilterChange}\r\n        >\r\n          <option value=\"\">Select Likelihood</option>\r\n          {[...new Set(data.map((item) => item.likelihood))].map((value) => (\r\n            <option key={value} value={value}>\r\n              {value}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          name=\"relevance\"\r\n          value={filters.relevance}\r\n          onChange={handleFilterChange}\r\n        >\r\n          <option value=\"\">Select Relevance</option>\r\n          {[...new Set(data.map((item) => item.relevance))].map((value) => (\r\n            <option key={value} value={value}>\r\n              {value}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}