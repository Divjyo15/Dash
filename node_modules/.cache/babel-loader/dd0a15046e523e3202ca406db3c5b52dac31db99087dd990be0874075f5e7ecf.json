{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hall_\\\\Desktop\\\\Bid\\\\frontend\\\\src\\\\components\\\\DashboardApp.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { LineChart, Line, BarChart, Bar, PieChart, Pie, ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell } from 'recharts';\nimport { DataContext } from '../services/DataContext'; // Ensure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardApp = () => {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = useContext(DataContext); // Use your context\n  const [filters, setFilters] = useState({\n    year: 'all',\n    topic: 'all',\n    region: 'all',\n    pestle: 'all',\n    source: 'all',\n    swot: 'all',\n    country: 'all',\n    city: 'all'\n  });\n\n  // Check for loading state or error\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 21\n  }, this);\n  if (!data || data.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 42\n  }, this); // Handle empty data\n\n  // Filter data based on selected filters\n  const filteredData = data.filter(item => {\n    return (filters.year === 'all' || item.year === parseInt(filters.year)) && (filters.topic === 'all' || item.topic === filters.topic) && (filters.region === 'all' || item.region === filters.region) && (filters.pestle === 'all' || item.pestle === filters.pestle) && (filters.source === 'all' || item.source === filters.source) && (filters.swot === 'all' || item.swot === filters.swot) && (filters.country === 'all' || item.country === filters.country) && (filters.city === 'all' || item.city === filters.city);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-8\",\n      children: \"Data Analysis Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Intensity & Likelihood Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: filteredData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"intensity\",\n              stroke: \"#3b82f6\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"likelihood\",\n              stroke: \"#10b981\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardApp, \"4qb1z5SpjSEtfbAkuccAT580qzE=\");\n_c = DashboardApp;\nexport default DashboardApp;\nvar _c;\n$RefreshReg$(_c, \"DashboardApp\");","map":{"version":3,"names":["React","useContext","useState","useEffect","LineChart","Line","BarChart","Bar","PieChart","Pie","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Cell","DataContext","jsxDEV","_jsxDEV","DashboardApp","_s","data","loading","error","filters","setFilters","year","topic","region","pestle","source","swot","country","city","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","filteredData","filter","item","parseInt","className","width","height","strokeDasharray","dataKey","type","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/hall_/Desktop/Bid/frontend/src/components/DashboardApp.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport {\r\n  LineChart, Line, BarChart, Bar, PieChart, Pie, ScatterChart, Scatter,\r\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell\r\n} from 'recharts';\r\nimport { DataContext } from '../services/DataContext'; // Ensure the path is correct\r\n\r\nconst DashboardApp = () => {\r\n  const { data, loading, error } = useContext(DataContext); // Use your context\r\n  const [filters, setFilters] = useState({\r\n    year: 'all', topic: 'all', region: 'all', pestle: 'all', source: 'all', swot: 'all', country: 'all', city: 'all'\r\n  });\r\n\r\n  // Check for loading state or error\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  if (!data || data.length === 0) return <div>No data available</div>; // Handle empty data\r\n\r\n  // Filter data based on selected filters\r\n  const filteredData = data.filter(item => {\r\n    return (\r\n      (filters.year === 'all' || item.year === parseInt(filters.year)) &&\r\n      (filters.topic === 'all' || item.topic === filters.topic) &&\r\n      (filters.region === 'all' || item.region === filters.region) &&\r\n      (filters.pestle === 'all' || item.pestle === filters.pestle) &&\r\n      (filters.source === 'all' || item.source === filters.source) &&\r\n      (filters.swot === 'all' || item.swot === filters.swot) &&\r\n      (filters.country === 'all' || item.country === filters.country) &&\r\n      (filters.city === 'all' || item.city === filters.city)\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"p-8 bg-gray-100 min-h-screen\">\r\n      <h1 className=\"text-3xl font-bold mb-8\">Data Analysis Dashboard</h1>\r\n\r\n      {/* Filters */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\r\n        {/* Select components here... */}\r\n      </div>\r\n\r\n      {/* Charts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        {/* Line Chart */}\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Intensity & Likelihood Trends</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={filteredData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"year\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"intensity\" stroke=\"#3b82f6\" strokeWidth={2} />\r\n              <Line type=\"monotone\" dataKey=\"likelihood\" stroke=\"#10b981\" strokeWidth={2} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        {/* Other charts... */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}