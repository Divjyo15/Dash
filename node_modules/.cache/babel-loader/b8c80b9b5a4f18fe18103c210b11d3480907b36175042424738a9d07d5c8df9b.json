{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hall_\\\\Desktop\\\\Bid\\\\frontend\\\\src\\\\services\\\\DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// DataContext.js\n/*\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DataContext = createContext();\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [data, setData] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    year: 'all',\r\n    topic: 'all',\r\n    region: 'all',\r\n    pestle: 'all',\r\n    source: 'all',\r\n    swot: 'all',\r\n    country: 'all',\r\n    city: 'all',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/data', { params: filters });\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [filters]);\r\n\r\n  return (\r\n    <DataContext.Provider value={{ data, filters, setFilters }}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useData = () => useContext(DataContext);*/\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [rawData, setRawData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [filters, setFilters] = useState({\n    year: 'all',\n    topic: 'all',\n    region: 'all',\n    pestle: 'all',\n    source: 'all',\n    swot: 'all',\n    country: 'all',\n    city: 'all'\n  });\n\n  // Fetch initial data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/data');\n        setRawData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // Only fetch once on component mount\n\n  // Apply filters whenever filters or raw data changes\n  useEffect(() => {\n    const applyFilters = () => {\n      let result = rawData;\n\n      // Apply each filter if it's not set to 'all'\n      if (filters.year !== 'all') {\n        result = result.filter(item => item.year === filters.year);\n      }\n      if (filters.topic !== 'all') {\n        result = result.filter(item => item.topic === filters.topic);\n      }\n      if (filters.region !== 'all') {\n        result = result.filter(item => item.region === filters.region);\n      }\n      if (filters.pestle !== 'all') {\n        result = result.filter(item => item.pestle === filters.pestle);\n      }\n      if (filters.source !== 'all') {\n        result = result.filter(item => item.source === filters.source);\n      }\n      if (filters.swot !== 'all') {\n        result = result.filter(item => item.swot === filters.swot);\n      }\n      if (filters.country !== 'all') {\n        result = result.filter(item => item.country === filters.country);\n      }\n      if (filters.city !== 'all') {\n        result = result.filter(item => item.city === filters.city);\n      }\n      setFilteredData(result);\n    };\n    applyFilters();\n  }, [filters, rawData]);\n\n  // Prepare data for specific chart types\n  const getChartData = chartType => {\n    switch (chartType) {\n      case 'trends':\n        return filteredData.map(item => ({\n          year: item.year,\n          intensity: item.intensity,\n          likelihood: item.likelihood\n        }));\n      case 'regions':\n        // Aggregate data by region\n        const regionData = {};\n        filteredData.forEach(item => {\n          if (!regionData[item.region]) {\n            regionData[item.region] = {\n              region: item.region,\n              relevance: 0\n            };\n          }\n          regionData[item.region].relevance += item.relevance;\n        });\n        return Object.values(regionData);\n      case 'topics':\n        // Aggregate data by topic\n        const topicData = {};\n        filteredData.forEach(item => {\n          if (!topicData[item.topic]) {\n            topicData[item.topic] = {\n              topic: item.topic,\n              value: 0\n            };\n          }\n          topicData[item.topic].value += 1;\n        });\n        return Object.values(topicData);\n      case 'scatter':\n        return filteredData.map(item => ({\n          intensity: item.intensity,\n          likelihood: item.likelihood\n        }));\n      default:\n        return filteredData;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      data: filteredData,\n      filters,\n      setFilters,\n      getChartData,\n      isLoading: rawData.length === 0\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(DataProvider, \"W9rzYgBz1O+0gkKHh3bP0hnEx04=\");\n_c = DataProvider;\nexport const useData = () => {\n  _s2();\n  return useContext(DataContext);\n};\n_s2(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","rawData","setRawData","filteredData","setFilteredData","filters","setFilters","year","topic","region","pestle","source","swot","country","city","fetchData","response","get","data","error","console","applyFilters","result","filter","item","getChartData","chartType","map","intensity","likelihood","regionData","forEach","relevance","Object","values","topicData","value","Provider","isLoading","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","useData","_s2","$RefreshReg$"],"sources":["C:/Users/hall_/Desktop/Bid/frontend/src/services/DataContext.js"],"sourcesContent":["// DataContext.js\r\n/*\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DataContext = createContext();\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [data, setData] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    year: 'all',\r\n    topic: 'all',\r\n    region: 'all',\r\n    pestle: 'all',\r\n    source: 'all',\r\n    swot: 'all',\r\n    country: 'all',\r\n    city: 'all',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/data', { params: filters });\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [filters]);\r\n\r\n  return (\r\n    <DataContext.Provider value={{ data, filters, setFilters }}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useData = () => useContext(DataContext);*/\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DataContext = createContext();\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [rawData, setRawData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    year: 'all',\r\n    topic: 'all',\r\n    region: 'all',\r\n    pestle: 'all',\r\n    source: 'all',\r\n    swot: 'all',\r\n    country: 'all',\r\n    city: 'all',\r\n  });\r\n\r\n  // Fetch initial data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/data');\r\n        setRawData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []); // Only fetch once on component mount\r\n\r\n  // Apply filters whenever filters or raw data changes\r\n  useEffect(() => {\r\n    const applyFilters = () => {\r\n      let result = rawData;\r\n\r\n      // Apply each filter if it's not set to 'all'\r\n      if (filters.year !== 'all') {\r\n        result = result.filter(item => item.year === filters.year);\r\n      }\r\n      if (filters.topic !== 'all') {\r\n        result = result.filter(item => item.topic === filters.topic);\r\n      }\r\n      if (filters.region !== 'all') {\r\n        result = result.filter(item => item.region === filters.region);\r\n      }\r\n      if (filters.pestle !== 'all') {\r\n        result = result.filter(item => item.pestle === filters.pestle);\r\n      }\r\n      if (filters.source !== 'all') {\r\n        result = result.filter(item => item.source === filters.source);\r\n      }\r\n      if (filters.swot !== 'all') {\r\n        result = result.filter(item => item.swot === filters.swot);\r\n      }\r\n      if (filters.country !== 'all') {\r\n        result = result.filter(item => item.country === filters.country);\r\n      }\r\n      if (filters.city !== 'all') {\r\n        result = result.filter(item => item.city === filters.city);\r\n      }\r\n\r\n      setFilteredData(result);\r\n    };\r\n\r\n    applyFilters();\r\n  }, [filters, rawData]);\r\n\r\n  // Prepare data for specific chart types\r\n  const getChartData = (chartType) => {\r\n    switch (chartType) {\r\n      case 'trends':\r\n        return filteredData.map(item => ({\r\n          year: item.year,\r\n          intensity: item.intensity,\r\n          likelihood: item.likelihood\r\n        }));\r\n      \r\n      case 'regions':\r\n        // Aggregate data by region\r\n        const regionData = {};\r\n        filteredData.forEach(item => {\r\n          if (!regionData[item.region]) {\r\n            regionData[item.region] = { region: item.region, relevance: 0 };\r\n          }\r\n          regionData[item.region].relevance += item.relevance;\r\n        });\r\n        return Object.values(regionData);\r\n\r\n      case 'topics':\r\n        // Aggregate data by topic\r\n        const topicData = {};\r\n        filteredData.forEach(item => {\r\n          if (!topicData[item.topic]) {\r\n            topicData[item.topic] = { topic: item.topic, value: 0 };\r\n          }\r\n          topicData[item.topic].value += 1;\r\n        });\r\n        return Object.values(topicData);\r\n\r\n      case 'scatter':\r\n        return filteredData.map(item => ({\r\n          intensity: item.intensity,\r\n          likelihood: item.likelihood\r\n        }));\r\n\r\n      default:\r\n        return filteredData;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider \r\n      value={{ \r\n        data: filteredData,\r\n        filters,\r\n        setFilters,\r\n        getChartData,\r\n        isLoading: rawData.length === 0\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useData = () => useContext(DataContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}