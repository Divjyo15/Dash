{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hall_\\\\Desktop\\\\Bid\\\\frontend\\\\src\\\\components\\\\DashboardApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { useData } from '../services/DataContext';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend, RadialLinearScale } from 'chart.js';\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, RadialLinearScale, Title, Tooltip, Legend);\nconst DashboardApp = () => {\n  _s();\n  const {\n    data,\n    filters,\n    setFilters\n  } = useData();\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    }\n  };\n  const chartData = useMemo(() => {\n    const regionCount = {};\n    const topicCount = {};\n    const yearlyMetrics = {};\n    const sectorData = {};\n    const countryData = {};\n    const cityData = {};\n    data.forEach(item => {\n      // Count regions, topics, and other categories\n      if (item.region) regionCount[item.region] = (regionCount[item.region] || 0) + 1;\n      if (item.topic) topicCount[item.topic] = (topicCount[item.topic] || 0) + 1;\n      if (item.country) countryData[item.country] = (countryData[item.country] || 0) + 1;\n      if (item.city) cityData[item.city] = (cityData[item.city] || 0) + 1;\n      if (item.sector) sectorData[item.sector] = (sectorData[item.sector] || 0) + 1;\n\n      // Handle yearly metrics aggregation\n      if (item.year) {\n        if (!yearlyMetrics[item.year]) {\n          yearlyMetrics[item.year] = {\n            intensity: 0,\n            likelihood: 0,\n            relevance: 0,\n            count: 0\n          };\n        }\n        yearlyMetrics[item.year].intensity += item.intensity || 0;\n        yearlyMetrics[item.year].likelihood += item.likelihood || 0;\n        yearlyMetrics[item.year].relevance += item.relevance || 0;\n        yearlyMetrics[item.year].count += 1;\n      }\n    });\n\n    // Calculate averages\n    const years = Object.keys(yearlyMetrics);\n    const yearlyData = {\n      intensity: years.map(year => yearlyMetrics[year].intensity / yearlyMetrics[year].count),\n      likelihood: years.map(year => yearlyMetrics[year].likelihood / yearlyMetrics[year].count),\n      relevance: years.map(year => yearlyMetrics[year].relevance / yearlyMetrics[year].count)\n    };\n    return {\n      metricsOverTime: {\n        labels: years,\n        datasets: [{\n          label: 'Intensity',\n          data: yearlyData.intensity,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }, {\n          label: 'Likelihood',\n          data: yearlyData.likelihood,\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.1\n        }, {\n          label: 'Relevance',\n          data: yearlyData.relevance,\n          borderColor: 'rgb(153, 102, 255)',\n          tension: 0.1\n        }]\n      },\n      regionChart: {\n        labels: Object.keys(regionCount),\n        datasets: [{\n          data: Object.values(regionCount),\n          backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)']\n        }]\n      },\n      topicChart: {\n        labels: Object.keys(topicCount),\n        datasets: [{\n          label: 'Topics Distribution',\n          data: Object.values(topicCount),\n          backgroundColor: 'rgba(54, 162, 235, 0.8)'\n        }]\n      },\n      countryChart: {\n        labels: Object.keys(countryData).slice(0, 10),\n        datasets: [{\n          label: 'Top 10 Countries',\n          data: Object.values(countryData).slice(0, 10),\n          backgroundColor: 'rgba(153, 102, 255, 0.8)'\n        }]\n      }\n    };\n  }, [data]);\n\n  // Filter options\n  const filterOptions = useMemo(() => ({\n    endYear: [...new Set(data.map(item => item.end_year))].filter(Boolean).sort(),\n    topics: [...new Set(data.map(item => item.topic))].filter(Boolean).sort(),\n    regions: [...new Set(data.map(item => item.region))].filter(Boolean).sort(),\n    countries: [...new Set(data.map(item => item.country))].filter(Boolean).sort()\n  }), [data]);\n  const handleFilterChange = (e, filterType) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: e.target.value\n    }));\n  };\n  const handleReset = () => {\n    setFilters({\n      endYear: 'all',\n      topic: 'all',\n      region: 'all',\n      country: 'all'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.endYear,\n        onChange: e => handleFilterChange(e, 'endYear'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"End Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), filterOptions.endYear.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 46\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.topic,\n        onChange: e => handleFilterChange(e, 'topic'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), filterOptions.topics.map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topic,\n          children: topic\n        }, topic, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 46\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.region,\n        onChange: e => handleFilterChange(e, 'region'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Regions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), filterOptions.regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: region,\n          children: region\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 48\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 border rounded\",\n        value: filters.country,\n        onChange: e => handleFilterChange(e, 'country'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), filterOptions.countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 51\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p-2 border rounded bg-gray-200 hover:bg-gray-300\",\n        onClick: handleReset,\n        children: \"Reset Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Metrics Over Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            options: options,\n            data: chartData.metricsOverTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Regional Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            options: options,\n            data: chartData.regionChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Topics Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: {\n              ...options,\n              indexAxis: 'y'\n            },\n            data: chartData.topicChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Top 10 Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: options,\n            data: chartData.countryChart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardApp, \"VbmGElYUxToC5GIdaRz/DlsvoCI=\", false, function () {\n  return [useData];\n});\n_c = DashboardApp;\nexport default DashboardApp;\nvar _c;\n$RefreshReg$(_c, \"DashboardApp\");","map":{"version":3,"names":["React","useState","useMemo","useData","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","RadialLinearScale","Line","Bar","Doughnut","jsxDEV","_jsxDEV","register","DashboardApp","_s","data","filters","setFilters","options","responsive","maintainAspectRatio","plugins","legend","position","chartData","regionCount","topicCount","yearlyMetrics","sectorData","countryData","cityData","forEach","item","region","topic","country","city","sector","year","intensity","likelihood","relevance","count","years","Object","keys","yearlyData","map","metricsOverTime","labels","datasets","label","borderColor","tension","regionChart","values","backgroundColor","topicChart","countryChart","slice","filterOptions","endYear","Set","end_year","filter","Boolean","sort","topics","regions","countries","handleFilterChange","e","filterType","prev","target","value","handleReset","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","indexAxis","_c","$RefreshReg$"],"sources":["C:/Users/hall_/Desktop/Bid/frontend/src/components/DashboardApp.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { useData } from '../services/DataContext';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  RadialLinearScale,\r\n} from 'chart.js';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  RadialLinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst DashboardApp = () => {\r\n  const { data, filters, setFilters } = useData();\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartData = useMemo(() => {\r\n    const regionCount = {};\r\n    const topicCount = {};\r\n    const yearlyMetrics = {};\r\n    const sectorData = {};\r\n    const countryData = {};\r\n    const cityData = {};\r\n\r\n    data.forEach(item => {\r\n      // Count regions, topics, and other categories\r\n      if (item.region) regionCount[item.region] = (regionCount[item.region] || 0) + 1;\r\n      if (item.topic) topicCount[item.topic] = (topicCount[item.topic] || 0) + 1;\r\n      if (item.country) countryData[item.country] = (countryData[item.country] || 0) + 1;\r\n      if (item.city) cityData[item.city] = (cityData[item.city] || 0) + 1;\r\n      if (item.sector) sectorData[item.sector] = (sectorData[item.sector] || 0) + 1;\r\n      \r\n      // Handle yearly metrics aggregation\r\n      if (item.year) {\r\n        if (!yearlyMetrics[item.year]) {\r\n          yearlyMetrics[item.year] = { intensity: 0, likelihood: 0, relevance: 0, count: 0 };\r\n        }\r\n        yearlyMetrics[item.year].intensity += item.intensity || 0;\r\n        yearlyMetrics[item.year].likelihood += item.likelihood || 0;\r\n        yearlyMetrics[item.year].relevance += item.relevance || 0;\r\n        yearlyMetrics[item.year].count += 1;\r\n      }\r\n    });\r\n\r\n    // Calculate averages\r\n    const years = Object.keys(yearlyMetrics);\r\n    const yearlyData = {\r\n      intensity: years.map(year => yearlyMetrics[year].intensity / yearlyMetrics[year].count),\r\n      likelihood: years.map(year => yearlyMetrics[year].likelihood / yearlyMetrics[year].count),\r\n      relevance: years.map(year => yearlyMetrics[year].relevance / yearlyMetrics[year].count),\r\n    };\r\n\r\n    return {\r\n      metricsOverTime: {\r\n        labels: years,\r\n        datasets: [\r\n          { label: 'Intensity', data: yearlyData.intensity, borderColor: 'rgb(75, 192, 192)', tension: 0.1 },\r\n          { label: 'Likelihood', data: yearlyData.likelihood, borderColor: 'rgb(255, 99, 132)', tension: 0.1 },\r\n          { label: 'Relevance', data: yearlyData.relevance, borderColor: 'rgb(153, 102, 255)', tension: 0.1 },\r\n        ],\r\n      },\r\n      regionChart: {\r\n        labels: Object.keys(regionCount),\r\n        datasets: [{ data: Object.values(regionCount), backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)'] }],\r\n      },\r\n      topicChart: {\r\n        labels: Object.keys(topicCount),\r\n        datasets: [{ label: 'Topics Distribution', data: Object.values(topicCount), backgroundColor: 'rgba(54, 162, 235, 0.8)' }],\r\n      },\r\n      countryChart: {\r\n        labels: Object.keys(countryData).slice(0, 10),\r\n        datasets: [{ label: 'Top 10 Countries', data: Object.values(countryData).slice(0, 10), backgroundColor: 'rgba(153, 102, 255, 0.8)' }],\r\n      },\r\n    };\r\n  }, [data]);\r\n\r\n  // Filter options\r\n  const filterOptions = useMemo(() => ({\r\n    endYear: [...new Set(data.map(item => item.end_year))].filter(Boolean).sort(),\r\n    topics: [...new Set(data.map(item => item.topic))].filter(Boolean).sort(),\r\n    regions: [...new Set(data.map(item => item.region))].filter(Boolean).sort(),\r\n    countries: [...new Set(data.map(item => item.country))].filter(Boolean).sort(),\r\n  }), [data]);\r\n\r\n  const handleFilterChange = (e, filterType) => {\r\n    setFilters(prev => ({ ...prev, [filterType]: e.target.value }));\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFilters({\r\n      endYear: 'all',\r\n      topic: 'all',\r\n      region: 'all',\r\n      country: 'all',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <select className=\"p-2 border rounded\" value={filters.endYear} onChange={(e) => handleFilterChange(e, 'endYear')}>\r\n          <option value=\"all\">End Year</option>\r\n          {filterOptions.endYear.map(year => <option key={year} value={year}>{year}</option>)}\r\n        </select>\r\n        <select className=\"p-2 border rounded\" value={filters.topic} onChange={(e) => handleFilterChange(e, 'topic')}>\r\n          <option value=\"all\">All Topics</option>\r\n          {filterOptions.topics.map(topic => <option key={topic} value={topic}>{topic}</option>)}\r\n        </select>\r\n        <select className=\"p-2 border rounded\" value={filters.region} onChange={(e) => handleFilterChange(e, 'region')}>\r\n          <option value=\"all\">All Regions</option>\r\n          {filterOptions.regions.map(region => <option key={region} value={region}>{region}</option>)}\r\n        </select>\r\n        <select className=\"p-2 border rounded\" value={filters.country} onChange={(e) => handleFilterChange(e, 'country')}>\r\n          <option value=\"all\">All Countries</option>\r\n          {filterOptions.countries.map(country => <option key={country} value={country}>{country}</option>)}\r\n        </select>\r\n        <button className=\"p-2 border rounded bg-gray-200 hover:bg-gray-300\" onClick={handleReset}>Reset Filters</button>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Metrics Over Time</h2>\r\n          <div className=\"h-80\">\r\n            <Line options={options} data={chartData.metricsOverTime} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Regional Distribution</h2>\r\n          <div className=\"h-80\">\r\n            <Doughnut options={options} data={chartData.regionChart} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Topics Distribution</h2>\r\n          <div className=\"h-80\">\r\n            <Bar options={{ ...options, indexAxis: 'y' }} data={chartData.topicChart} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Top 10 Countries</h2>\r\n          <div className=\"h-80\">\r\n            <Bar options={options} data={chartData.countryChart} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}